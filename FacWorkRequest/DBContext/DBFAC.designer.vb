'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="WorkRequest")>  _
Partial Public Class DBFACDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertFileAttach(instance As FileAttach)
    End Sub
  Partial Private Sub UpdateFileAttach(instance As FileAttach)
    End Sub
  Partial Private Sub DeleteFileAttach(instance As FileAttach)
    End Sub
  Partial Private Sub InsertWorkStatus(instance As WorkStatus)
    End Sub
  Partial Private Sub UpdateWorkStatus(instance As WorkStatus)
    End Sub
  Partial Private Sub DeleteWorkStatus(instance As WorkStatus)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.System.Configuration.ConfigurationManager.ConnectionStrings("WorkRequestConnectionString").ConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property vewPlaces() As System.Data.Linq.Table(Of vewPlace)
		Get
			Return Me.GetTable(Of vewPlace)
		End Get
	End Property
	
	Public ReadOnly Property vewPurposes() As System.Data.Linq.Table(Of vewPurpose)
		Get
			Return Me.GetTable(Of vewPurpose)
		End Get
	End Property
	
	Public ReadOnly Property vewOperatorReqFlows() As System.Data.Linq.Table(Of vewOperatorReqFlow)
		Get
			Return Me.GetTable(Of vewOperatorReqFlow)
		End Get
	End Property
	
	Public ReadOnly Property vewFloors() As System.Data.Linq.Table(Of vewFloor)
		Get
			Return Me.GetTable(Of vewFloor)
		End Get
	End Property
	
	Public ReadOnly Property vewQuotationCnts() As System.Data.Linq.Table(Of vewQuotationCnt)
		Get
			Return Me.GetTable(Of vewQuotationCnt)
		End Get
	End Property
	
	Public ReadOnly Property vewWorkRequestLists() As System.Data.Linq.Table(Of vewWorkRequestList)
		Get
			Return Me.GetTable(Of vewWorkRequestList)
		End Get
	End Property
	
	Public ReadOnly Property vewOperatorFacs() As System.Data.Linq.Table(Of vewOperatorFac)
		Get
			Return Me.GetTable(Of vewOperatorFac)
		End Get
	End Property
	
	Public ReadOnly Property vewWorkRequests() As System.Data.Linq.Table(Of vewWorkRequest)
		Get
			Return Me.GetTable(Of vewWorkRequest)
		End Get
	End Property
	
	Public ReadOnly Property vewWorkRequestStatus() As System.Data.Linq.Table(Of vewWorkRequestStatus)
		Get
			Return Me.GetTable(Of vewWorkRequestStatus)
		End Get
	End Property
	
	Public ReadOnly Property FileAttaches() As System.Data.Linq.Table(Of FileAttach)
		Get
			Return Me.GetTable(Of FileAttach)
		End Get
	End Property
	
	Public ReadOnly Property vewOperators() As System.Data.Linq.Table(Of vewOperator)
		Get
			Return Me.GetTable(Of vewOperator)
		End Get
	End Property
	
	Public ReadOnly Property vewStyles() As System.Data.Linq.Table(Of vewStyle)
		Get
			Return Me.GetTable(Of vewStyle)
		End Get
	End Property
	
	Public ReadOnly Property WorkStatus() As System.Data.Linq.Table(Of WorkStatus)
		Get
			Return Me.GetTable(Of WorkStatus)
		End Get
	End Property
	
	Public ReadOnly Property vewWorkRequest_Special_1s() As System.Data.Linq.Table(Of vewWorkRequest_Special_1)
		Get
			Return Me.GetTable(Of vewWorkRequest_Special_1)
		End Get
	End Property
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.sprOperatorReqFlow")>  _
	Public Function sprOperatorReqFlow(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Opid", DbType:="Char(6)")> ByVal opid As String) As ISingleResult(Of sprOperatorReqFlowResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), opid)
		Return CType(result.ReturnValue,ISingleResult(Of sprOperatorReqFlowResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.sprDecryptCode")>  _
	Public Function sprDecryptCode(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="UIDCode", DbType:="NVarChar(MAX)")> ByVal uIDCode As String) As ISingleResult(Of sprDecryptCodeResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), uIDCode)
		Return CType(result.ReturnValue,ISingleResult(Of sprDecryptCodeResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.sprPREntry")>  _
	Public Function sprPREntry(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="WRno", DbType:="Char(7)")> ByVal wRno As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="OPID", DbType:="VarChar(6)")> ByVal oPID As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="PRNo1", DbType:="NVarChar(25)")> ByVal pRNo1 As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="PRNo2", DbType:="NVarChar(25)")> ByVal pRNo2 As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="PRNo3", DbType:="NVarChar(25)")> ByVal pRNo3 As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="PRNo4", DbType:="NVarChar(25)")> ByVal pRNo4 As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="PRNo5", DbType:="NVarChar(25)")> ByVal pRNo5 As String) As ISingleResult(Of sprPREntryResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), wRno, oPID, pRNo1, pRNo2, pRNo3, pRNo4, pRNo5)
		Return CType(result.ReturnValue,ISingleResult(Of sprPREntryResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.sprWorkRequestUPDPlan")>  _
	Public Function sprWorkRequestUPDPlan(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="WRNo", DbType:="Char(7)")> ByVal wRNo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="StartPlan", DbType:="Date")> ByVal startPlan As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="FinishPlan", DbType:="Date")> ByVal finishPlan As System.Nullable(Of Date)) As ISingleResult(Of sprWorkRequestUPDPlanResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), wRNo, startPlan, finishPlan)
		Return CType(result.ReturnValue,ISingleResult(Of sprWorkRequestUPDPlanResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.sprWorkRequestNew")>  _
	Public Function sprWorkRequestNew( _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="DataTrn", DbType:="Char(3)")> ByVal dataTrn As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="JobType", DbType:="Int")> ByVal jobType As System.Nullable(Of Integer),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="JobName", DbType:="NVarChar(100)")> ByVal jobName As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Place", DbType:="Int")> ByVal place As System.Nullable(Of Integer),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Floor", DbType:="Int")> ByVal floor As System.Nullable(Of Integer),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Process", DbType:="NVarChar(50)")> ByVal process As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Division", DbType:="NVarChar(50)")> ByVal division As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Dept", DbType:="NVarChar(50)")> ByVal dept As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Section", DbType:="NVarChar(50)")> ByVal section As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Tel", DbType:="NVarChar(50)")> ByVal tel As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="QuotationDeliveryDate", DbType:="Date")> ByVal quotationDeliveryDate As System.Nullable(Of Date),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="ExpectedDate", DbType:="Date")> ByVal expectedDate As System.Nullable(Of Date),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="JobDetail", DbType:="NVarChar(200)")> ByVal jobDetail As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="UserOPID", DbType:="VarChar(6)")> ByVal userOPID As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="UserEMail", DbType:="VarChar(50)")> ByVal userEMail As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="ComputerName", DbType:="VarChar(50)")> ByVal computerName As String) As ISingleResult(Of sprWorkRequestNewResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), dataTrn, jobType, jobName, place, floor, process, division, dept, section, tel, quotationDeliveryDate, expectedDate, jobDetail, userOPID, userEMail, computerName)
		Return CType(result.ReturnValue,ISingleResult(Of sprWorkRequestNewResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.sprWorkRequestUPDSurvey")>  _
	Public Function sprWorkRequestUPDSurvey(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="WRNo", DbType:="Char(7)")> ByVal wRNo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="SurveyDate", DbType:="Date")> ByVal surveyDate As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="SurveyRemark", DbType:="VarChar(200)")> ByVal surveyRemark As String) As ISingleResult(Of sprWorkRequestUPDSurveyResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), wRNo, surveyDate, surveyRemark)
		Return CType(result.ReturnValue,ISingleResult(Of sprWorkRequestUPDSurveyResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.sprWorkRequest")>  _
	Public Function sprWorkRequest(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="DataTrn", DbType:="Char(3)")> ByVal dataTrn As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="WRNo", DbType:="Char(7)")> ByVal wRNo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="UserOPID", DbType:="VarChar(6)")> ByVal userOPID As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="ComputerName", DbType:="VarChar(50)")> ByVal computerName As String) As ISingleResult(Of sprWorkRequestResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), dataTrn, wRNo, userOPID, computerName)
		Return CType(result.ReturnValue,ISingleResult(Of sprWorkRequestResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.sprChartSummary")>  _
	Public Function sprChartSummary(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Start", DbType:="Date")> ByVal start As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="End", DbType:="Date")> ByVal [end] As System.Nullable(Of Date)) As ISingleResult(Of sprChartSummaryResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), start, [end])
		Return CType(result.ReturnValue,ISingleResult(Of sprChartSummaryResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.sprChartSummaryByDept")>  _
	Public Function sprChartSummaryByDept(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Start", DbType:="Date")> ByVal start As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="End", DbType:="Date")> ByVal [end] As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Role", DbType:="Int")> ByVal role As System.Nullable(Of Integer)) As ISingleResult(Of sprChartSummaryByDeptResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), start, [end], role)
		Return CType(result.ReturnValue,ISingleResult(Of sprChartSummaryByDeptResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.sprChartSummaryByDeptTotal")>  _
	Public Function sprChartSummaryByDeptTotal(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Start", DbType:="Date")> ByVal start As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="End", DbType:="Date")> ByVal [end] As System.Nullable(Of Date)) As ISingleResult(Of sprChartSummaryByDeptTotalResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), start, [end])
		Return CType(result.ReturnValue,ISingleResult(Of sprChartSummaryByDeptTotalResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.sprChartSummaryByRole")>  _
	Public Function sprChartSummaryByRole(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Start", DbType:="Date")> ByVal start As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="End", DbType:="Date")> ByVal [end] As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Role", DbType:="Int")> ByVal role As System.Nullable(Of Integer)) As ISingleResult(Of sprChartSummaryByRoleResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), start, [end], role)
		Return CType(result.ReturnValue,ISingleResult(Of sprChartSummaryByRoleResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.sprChartSummaryByStatus")>  _
	Public Function sprChartSummaryByStatus(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Start", DbType:="Date")> ByVal start As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="End", DbType:="Date")> ByVal [end] As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Role", DbType:="Int")> ByVal role As System.Nullable(Of Integer)) As ISingleResult(Of sprChartSummaryByStatusResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), start, [end], role)
		Return CType(result.ReturnValue,ISingleResult(Of sprChartSummaryByStatusResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.sprChartSummaryByStatusTotal")>  _
	Public Function sprChartSummaryByStatusTotal(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Start", DbType:="Date")> ByVal start As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="End", DbType:="Date")> ByVal [end] As System.Nullable(Of Date)) As ISingleResult(Of sprChartSummaryByStatusTotalResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), start, [end])
		Return CType(result.ReturnValue,ISingleResult(Of sprChartSummaryByStatusTotalResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.sprFileAttach")>  _
	Public Function sprFileAttach(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Grp", DbType:="Char(3)")> ByVal grp As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="WRNo", DbType:="Char(7)")> ByVal wRNo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Seq", DbType:="Int")> ByVal seq As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="FileAttach", DbType:="VarBinary(MAX)")> ByVal fileAttach As System.Data.Linq.Binary, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="FileName", DbType:="NVarChar(40)")> ByVal fileName As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Extension", DbType:="NVarChar(40)")> ByVal extension As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="SupplierName", DbType:="NVarChar(50)")> ByVal supplierName As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="QuoDate", DbType:="Date")> ByVal quoDate As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Amount", DbType:="Decimal(18,2)")> ByVal amount As System.Nullable(Of Decimal), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="OPID", DbType:="Char(6)")> ByVal oPID As String) As ISingleResult(Of sprFileAttachResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), grp, wRNo, seq, fileAttach, fileName, extension, supplierName, quoDate, amount, oPID)
		Return CType(result.ReturnValue,ISingleResult(Of sprFileAttachResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.sprChartSummaryByPlace")>  _
	Public Function sprChartSummaryByPlace(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Place", DbType:="Int")> ByVal place As System.Nullable(Of Integer)) As ISingleResult(Of sprChartSummaryByPlaceResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), place)
		Return CType(result.ReturnValue,ISingleResult(Of sprChartSummaryByPlaceResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.sprWorkRequestUPDAndDEL")>  _
	Public Function sprWorkRequestUPDAndDEL( _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="DataTrn", DbType:="Char(3)")> ByVal dataTrn As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="WRNo", DbType:="Char(7)")> ByVal wRNo As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="JobType", DbType:="Int")> ByVal jobType As System.Nullable(Of Integer),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="JobName", DbType:="NVarChar(100)")> ByVal jobName As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Place", DbType:="Int")> ByVal place As System.Nullable(Of Integer),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Floor", DbType:="Int")> ByVal floor As System.Nullable(Of Integer),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Process", DbType:="NVarChar(50)")> ByVal process As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Division", DbType:="NVarChar(50)")> ByVal division As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Dept", DbType:="NVarChar(50)")> ByVal dept As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Section", DbType:="NVarChar(50)")> ByVal section As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Tel", DbType:="NVarChar(50)")> ByVal tel As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="QuotationDeliveryDate", DbType:="Date")> ByVal quotationDeliveryDate As System.Nullable(Of Date),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="ExpectedDate", DbType:="Date")> ByVal expectedDate As System.Nullable(Of Date),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="JobDetail", DbType:="NVarChar(200)")> ByVal jobDetail As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="UserOPID", DbType:="VarChar(6)")> ByVal userOPID As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="UserEMail", DbType:="VarChar(50)")> ByVal userEMail As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="ComputerName", DbType:="VarChar(50)")> ByVal computerName As String) As ISingleResult(Of sprWorkRequestUPDAndDELResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), dataTrn, wRNo, jobType, jobName, place, floor, process, division, dept, section, tel, quotationDeliveryDate, expectedDate, jobDetail, userOPID, userEMail, computerName)
		Return CType(result.ReturnValue,ISingleResult(Of sprWorkRequestUPDAndDELResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.sprWorkRequestListsFac")>  _
	Public Function sprWorkRequestListsFac(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="OPID", DbType:="Char(6)")> ByVal oPID As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Category", DbType:="Int")> ByVal category As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="DataCondition", DbType:="NVarChar(100)")> ByVal dataCondition As String) As ISingleResult(Of sprWorkRequestListsFacResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), oPID, category, dataCondition)
		Return CType(result.ReturnValue,ISingleResult(Of sprWorkRequestListsFacResult))
	End Function
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.vewPlace")>  _
Partial Public Class vewPlace
	
	Private _PlaceNbr As Integer
	
	Private _Name As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PlaceNbr", AutoSync:=AutoSync.Always, DbType:="Int NOT NULL IDENTITY", IsDbGenerated:=true)>  _
	Public Property PlaceNbr() As Integer
		Get
			Return Me._PlaceNbr
		End Get
		Set
			If ((Me._PlaceNbr = value)  _
						= false) Then
				Me._PlaceNbr = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Name() As String
		Get
			Return Me._Name
		End Get
		Set
			If (String.Equals(Me._Name, value) = false) Then
				Me._Name = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.vewPurpose")>  _
Partial Public Class vewPurpose
	
	Private _GroupCode As String
	
	Private _Code As String
	
	Private _Value1 As String
	
	Private _Value2 As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GroupCode", DbType:="Char(4) NOT NULL", CanBeNull:=false)>  _
	Public Property GroupCode() As String
		Get
			Return Me._GroupCode
		End Get
		Set
			If (String.Equals(Me._GroupCode, value) = false) Then
				Me._GroupCode = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Code", DbType:="Char(4) NOT NULL", CanBeNull:=false)>  _
	Public Property Code() As String
		Get
			Return Me._Code
		End Get
		Set
			If (String.Equals(Me._Code, value) = false) Then
				Me._Code = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Value1", DbType:="NVarChar(100)")>  _
	Public Property Value1() As String
		Get
			Return Me._Value1
		End Get
		Set
			If (String.Equals(Me._Value1, value) = false) Then
				Me._Value1 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Value2", DbType:="NVarChar(100)")>  _
	Public Property Value2() As String
		Get
			Return Me._Value2
		End Get
		Set
			If (String.Equals(Me._Value2, value) = false) Then
				Me._Value2 = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.vewOperatorReqFlow")>  _
Partial Public Class vewOperatorReqFlow
	
	Private _ID As Integer
	
	Private _GroupID As Integer
	
	Private _SubGroupID As System.Nullable(Of Integer)
	
	Private _GroupName As String
	
	Private _OPID As String
	
	Private _PW As String
	
	Private _SecurityRole As System.Nullable(Of Integer)
	
	Private _NameEng As String
	
	Private _FullName As String
	
	Private _NickName As String
	
	Private _Email As String
	
	Private _Divsion As String
	
	Private _Section As String
	
	Private _Department1 As String
	
	Private _Department2 As String
	
	Private _Department3 As String
	
	Private _Organiztion As String
	
	Private _Position As String
	
	Private _EmpLevel As System.Nullable(Of Integer)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", DbType:="Int NOT NULL")>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me._ID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GroupID", DbType:="Int NOT NULL")>  _
	Public Property GroupID() As Integer
		Get
			Return Me._GroupID
		End Get
		Set
			If ((Me._GroupID = value)  _
						= false) Then
				Me._GroupID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubGroupID", DbType:="Int")>  _
	Public Property SubGroupID() As System.Nullable(Of Integer)
		Get
			Return Me._SubGroupID
		End Get
		Set
			If (Me._SubGroupID.Equals(value) = false) Then
				Me._SubGroupID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GroupName", DbType:="NChar(20) NOT NULL", CanBeNull:=false)>  _
	Public Property GroupName() As String
		Get
			Return Me._GroupName
		End Get
		Set
			If (String.Equals(Me._GroupName, value) = false) Then
				Me._GroupName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OPID", DbType:="Char(6) NOT NULL", CanBeNull:=false)>  _
	Public Property OPID() As String
		Get
			Return Me._OPID
		End Get
		Set
			If (String.Equals(Me._OPID, value) = false) Then
				Me._OPID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PW", DbType:="Char(4) NOT NULL", CanBeNull:=false)>  _
	Public Property PW() As String
		Get
			Return Me._PW
		End Get
		Set
			If (String.Equals(Me._PW, value) = false) Then
				Me._PW = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SecurityRole", DbType:="Int")>  _
	Public Property SecurityRole() As System.Nullable(Of Integer)
		Get
			Return Me._SecurityRole
		End Get
		Set
			If (Me._SecurityRole.Equals(value) = false) Then
				Me._SecurityRole = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NameEng", DbType:="NVarChar(100) NOT NULL", CanBeNull:=false)>  _
	Public Property NameEng() As String
		Get
			Return Me._NameEng
		End Get
		Set
			If (String.Equals(Me._NameEng, value) = false) Then
				Me._NameEng = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FullName", DbType:="NVarChar(4000)")>  _
	Public Property FullName() As String
		Get
			Return Me._FullName
		End Get
		Set
			If (String.Equals(Me._FullName, value) = false) Then
				Me._FullName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NickName", DbType:="NVarChar(4000)")>  _
	Public Property NickName() As String
		Get
			Return Me._NickName
		End Get
		Set
			If (String.Equals(Me._NickName, value) = false) Then
				Me._NickName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Email", DbType:="NVarChar(100)")>  _
	Public Property Email() As String
		Get
			Return Me._Email
		End Get
		Set
			If (String.Equals(Me._Email, value) = false) Then
				Me._Email = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Divsion", DbType:="NVarChar(100)")>  _
	Public Property Divsion() As String
		Get
			Return Me._Divsion
		End Get
		Set
			If (String.Equals(Me._Divsion, value) = false) Then
				Me._Divsion = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Section", DbType:="NVarChar(100)")>  _
	Public Property Section() As String
		Get
			Return Me._Section
		End Get
		Set
			If (String.Equals(Me._Section, value) = false) Then
				Me._Section = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Department1", DbType:="NVarChar(100)")>  _
	Public Property Department1() As String
		Get
			Return Me._Department1
		End Get
		Set
			If (String.Equals(Me._Department1, value) = false) Then
				Me._Department1 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Department2", DbType:="NVarChar(100)")>  _
	Public Property Department2() As String
		Get
			Return Me._Department2
		End Get
		Set
			If (String.Equals(Me._Department2, value) = false) Then
				Me._Department2 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Department3", DbType:="NVarChar(100)")>  _
	Public Property Department3() As String
		Get
			Return Me._Department3
		End Get
		Set
			If (String.Equals(Me._Department3, value) = false) Then
				Me._Department3 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Organiztion", DbType:="NVarChar(100)")>  _
	Public Property Organiztion() As String
		Get
			Return Me._Organiztion
		End Get
		Set
			If (String.Equals(Me._Organiztion, value) = false) Then
				Me._Organiztion = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Position", DbType:="NVarChar(100)")>  _
	Public Property Position() As String
		Get
			Return Me._Position
		End Get
		Set
			If (String.Equals(Me._Position, value) = false) Then
				Me._Position = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EmpLevel", DbType:="Int")>  _
	Public Property EmpLevel() As System.Nullable(Of Integer)
		Get
			Return Me._EmpLevel
		End Get
		Set
			If (Me._EmpLevel.Equals(value) = false) Then
				Me._EmpLevel = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.vewFloor")>  _
Partial Public Class vewFloor
	
	Private _FloorNbr As Integer
	
	Private _PlaceNbr As Integer
	
	Private _NamePlace As String
	
	Private _NameFloor As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FloorNbr", DbType:="Int NOT NULL")>  _
	Public Property FloorNbr() As Integer
		Get
			Return Me._FloorNbr
		End Get
		Set
			If ((Me._FloorNbr = value)  _
						= false) Then
				Me._FloorNbr = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PlaceNbr", DbType:="Int NOT NULL")>  _
	Public Property PlaceNbr() As Integer
		Get
			Return Me._PlaceNbr
		End Get
		Set
			If ((Me._PlaceNbr = value)  _
						= false) Then
				Me._PlaceNbr = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NamePlace", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property NamePlace() As String
		Get
			Return Me._NamePlace
		End Get
		Set
			If (String.Equals(Me._NamePlace, value) = false) Then
				Me._NamePlace = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NameFloor", DbType:="NChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property NameFloor() As String
		Get
			Return Me._NameFloor
		End Get
		Set
			If (String.Equals(Me._NameFloor, value) = false) Then
				Me._NameFloor = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.vewQuotationCnt")>  _
Partial Public Class vewQuotationCnt
	
	Private _FileNbr As Integer
	
	Private _Grp As String
	
	Private _WRNo As String
	
	Private _Seq As Integer
	
	Private _FileAttach() As Byte
	
	Private _FileName As String
	
	Private _Extension As String
	
	Private _SupplierName As String
	
	Private _QuotationAmt As Decimal
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FileNbr", AutoSync:=AutoSync.Always, DbType:="Int NOT NULL IDENTITY", IsDbGenerated:=true)>  _
	Public Property FileNbr() As Integer
		Get
			Return Me._FileNbr
		End Get
		Set
			If ((Me._FileNbr = value)  _
						= false) Then
				Me._FileNbr = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Grp", DbType:="Char(3) NOT NULL", CanBeNull:=false)>  _
	Public Property Grp() As String
		Get
			Return Me._Grp
		End Get
		Set
			If (String.Equals(Me._Grp, value) = false) Then
				Me._Grp = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WRNo", DbType:="Char(7) NOT NULL", CanBeNull:=false)>  _
	Public Property WRNo() As String
		Get
			Return Me._WRNo
		End Get
		Set
			If (String.Equals(Me._WRNo, value) = false) Then
				Me._WRNo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Seq", DbType:="Int NOT NULL")>  _
	Public Property Seq() As Integer
		Get
			Return Me._Seq
		End Get
		Set
			If ((Me._Seq = value)  _
						= false) Then
				Me._Seq = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FileAttach", DbType:="VarBinary(MAX) NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property FileAttach() As Byte()
		Get
			Return Me._FileAttach
		End Get
		Set
			If (Object.Equals(Me._FileAttach, value) = false) Then
				Me._FileAttach = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FileName", DbType:="NChar(40) NOT NULL", CanBeNull:=false)>  _
	Public Property FileName() As String
		Get
			Return Me._FileName
		End Get
		Set
			If (String.Equals(Me._FileName, value) = false) Then
				Me._FileName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Extension", DbType:="NChar(40) NOT NULL", CanBeNull:=false)>  _
	Public Property Extension() As String
		Get
			Return Me._Extension
		End Get
		Set
			If (String.Equals(Me._Extension, value) = false) Then
				Me._Extension = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SupplierName", DbType:="NVarChar(255)")>  _
	Public Property SupplierName() As String
		Get
			Return Me._SupplierName
		End Get
		Set
			If (String.Equals(Me._SupplierName, value) = false) Then
				Me._SupplierName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QuotationAmt", DbType:="Decimal(18,2) NOT NULL")>  _
	Public Property QuotationAmt() As Decimal
		Get
			Return Me._QuotationAmt
		End Get
		Set
			If ((Me._QuotationAmt = value)  _
						= false) Then
				Me._QuotationAmt = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.vewWorkRequestList")>  _
Partial Public Class vewWorkRequestList
	
	Private _WRNo As String
	
	Private _Role As String
	
	Private _Seq As Integer
	
	Private _ProcessCode As String
	
	Private _ProcessName As String
	
	Private _JobType As Integer
	
	Private _Name As String
	
	Private _JobName As String
	
	Private _PlaceNbr As Integer
	
	Private _NamePlace As String
	
	Private _FloorNbr As Integer
	
	Private _NameFloor As String
	
	Private _Process As String
	
	Private _Division As String
	
	Private _Dept As String
	
	Private _Section As String
	
	Private _Tel As String
	
	Private _QuotationDeliveryDate As System.Nullable(Of Date)
	
	Private _ExpectedDate As System.Nullable(Of Date)
	
	Private _JobDetail As String
	
	Private _GroupID As Integer
	
	Private _SubGroupID As Integer
	
	Private _UserOPID As String
	
	Private _NickName As String
	
	Private _CreateDate As System.Nullable(Of Date)
	
	Private _UpdDate As Date
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WRNo", DbType:="Char(7) NOT NULL", CanBeNull:=false)>  _
	Public Property WRNo() As String
		Get
			Return Me._WRNo
		End Get
		Set
			If (String.Equals(Me._WRNo, value) = false) Then
				Me._WRNo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Role", DbType:="Char(20) NOT NULL", CanBeNull:=false)>  _
	Public Property Role() As String
		Get
			Return Me._Role
		End Get
		Set
			If (String.Equals(Me._Role, value) = false) Then
				Me._Role = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Seq", DbType:="Int NOT NULL")>  _
	Public Property Seq() As Integer
		Get
			Return Me._Seq
		End Get
		Set
			If ((Me._Seq = value)  _
						= false) Then
				Me._Seq = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProcessCode", DbType:="Char(10) NOT NULL", CanBeNull:=false)>  _
	Public Property ProcessCode() As String
		Get
			Return Me._ProcessCode
		End Get
		Set
			If (String.Equals(Me._ProcessCode, value) = false) Then
				Me._ProcessCode = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProcessName", DbType:="VarChar(100) NOT NULL", CanBeNull:=false)>  _
	Public Property ProcessName() As String
		Get
			Return Me._ProcessName
		End Get
		Set
			If (String.Equals(Me._ProcessName, value) = false) Then
				Me._ProcessName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_JobType", DbType:="Int NOT NULL")>  _
	Public Property JobType() As Integer
		Get
			Return Me._JobType
		End Get
		Set
			If ((Me._JobType = value)  _
						= false) Then
				Me._JobType = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Name() As String
		Get
			Return Me._Name
		End Get
		Set
			If (String.Equals(Me._Name, value) = false) Then
				Me._Name = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_JobName", DbType:="NVarChar(100) NOT NULL", CanBeNull:=false)>  _
	Public Property JobName() As String
		Get
			Return Me._JobName
		End Get
		Set
			If (String.Equals(Me._JobName, value) = false) Then
				Me._JobName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PlaceNbr", DbType:="Int NOT NULL")>  _
	Public Property PlaceNbr() As Integer
		Get
			Return Me._PlaceNbr
		End Get
		Set
			If ((Me._PlaceNbr = value)  _
						= false) Then
				Me._PlaceNbr = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NamePlace", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property NamePlace() As String
		Get
			Return Me._NamePlace
		End Get
		Set
			If (String.Equals(Me._NamePlace, value) = false) Then
				Me._NamePlace = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FloorNbr", DbType:="Int NOT NULL")>  _
	Public Property FloorNbr() As Integer
		Get
			Return Me._FloorNbr
		End Get
		Set
			If ((Me._FloorNbr = value)  _
						= false) Then
				Me._FloorNbr = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NameFloor", DbType:="NChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property NameFloor() As String
		Get
			Return Me._NameFloor
		End Get
		Set
			If (String.Equals(Me._NameFloor, value) = false) Then
				Me._NameFloor = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Process", DbType:="NVarChar(50)")>  _
	Public Property Process() As String
		Get
			Return Me._Process
		End Get
		Set
			If (String.Equals(Me._Process, value) = false) Then
				Me._Process = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Division", DbType:="NVarChar(50)")>  _
	Public Property Division() As String
		Get
			Return Me._Division
		End Get
		Set
			If (String.Equals(Me._Division, value) = false) Then
				Me._Division = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Dept", DbType:="NVarChar(50)")>  _
	Public Property Dept() As String
		Get
			Return Me._Dept
		End Get
		Set
			If (String.Equals(Me._Dept, value) = false) Then
				Me._Dept = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Section", DbType:="NVarChar(50)")>  _
	Public Property Section() As String
		Get
			Return Me._Section
		End Get
		Set
			If (String.Equals(Me._Section, value) = false) Then
				Me._Section = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tel", DbType:="NVarChar(50)")>  _
	Public Property Tel() As String
		Get
			Return Me._Tel
		End Get
		Set
			If (String.Equals(Me._Tel, value) = false) Then
				Me._Tel = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QuotationDeliveryDate", DbType:="Date")>  _
	Public Property QuotationDeliveryDate() As System.Nullable(Of Date)
		Get
			Return Me._QuotationDeliveryDate
		End Get
		Set
			If (Me._QuotationDeliveryDate.Equals(value) = false) Then
				Me._QuotationDeliveryDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ExpectedDate", DbType:="Date")>  _
	Public Property ExpectedDate() As System.Nullable(Of Date)
		Get
			Return Me._ExpectedDate
		End Get
		Set
			If (Me._ExpectedDate.Equals(value) = false) Then
				Me._ExpectedDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_JobDetail", DbType:="NVarChar(200)")>  _
	Public Property JobDetail() As String
		Get
			Return Me._JobDetail
		End Get
		Set
			If (String.Equals(Me._JobDetail, value) = false) Then
				Me._JobDetail = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GroupID", DbType:="Int NOT NULL")>  _
	Public Property GroupID() As Integer
		Get
			Return Me._GroupID
		End Get
		Set
			If ((Me._GroupID = value)  _
						= false) Then
				Me._GroupID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubGroupID", DbType:="Int NOT NULL")>  _
	Public Property SubGroupID() As Integer
		Get
			Return Me._SubGroupID
		End Get
		Set
			If ((Me._SubGroupID = value)  _
						= false) Then
				Me._SubGroupID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserOPID", DbType:="Char(6) NOT NULL", CanBeNull:=false)>  _
	Public Property UserOPID() As String
		Get
			Return Me._UserOPID
		End Get
		Set
			If (String.Equals(Me._UserOPID, value) = false) Then
				Me._UserOPID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NickName", DbType:="NVarChar(4000)")>  _
	Public Property NickName() As String
		Get
			Return Me._NickName
		End Get
		Set
			If (String.Equals(Me._NickName, value) = false) Then
				Me._NickName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreateDate", DbType:="DateTime")>  _
	Public Property CreateDate() As System.Nullable(Of Date)
		Get
			Return Me._CreateDate
		End Get
		Set
			If (Me._CreateDate.Equals(value) = false) Then
				Me._CreateDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UpdDate", DbType:="DateTime NOT NULL")>  _
	Public Property UpdDate() As Date
		Get
			Return Me._UpdDate
		End Get
		Set
			If ((Me._UpdDate = value)  _
						= false) Then
				Me._UpdDate = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.vewOperatorFac")>  _
Partial Public Class vewOperatorFac
	
	Private _ID As Integer
	
	Private _GroupID As Integer
	
	Private _SeqID As Integer
	
	Private _OPID As String
	
	Private _UpdDate As Date
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.Always, DbType:="Int NOT NULL IDENTITY", IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me._ID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GroupID", DbType:="Int NOT NULL")>  _
	Public Property GroupID() As Integer
		Get
			Return Me._GroupID
		End Get
		Set
			If ((Me._GroupID = value)  _
						= false) Then
				Me._GroupID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SeqID", DbType:="Int NOT NULL")>  _
	Public Property SeqID() As Integer
		Get
			Return Me._SeqID
		End Get
		Set
			If ((Me._SeqID = value)  _
						= false) Then
				Me._SeqID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OPID", DbType:="Char(6) NOT NULL", CanBeNull:=false)>  _
	Public Property OPID() As String
		Get
			Return Me._OPID
		End Get
		Set
			If (String.Equals(Me._OPID, value) = false) Then
				Me._OPID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UpdDate", DbType:="DateTime NOT NULL")>  _
	Public Property UpdDate() As Date
		Get
			Return Me._UpdDate
		End Get
		Set
			If ((Me._UpdDate = value)  _
						= false) Then
				Me._UpdDate = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.vewWorkRequest")>  _
Partial Public Class vewWorkRequest
	
	Private _WRNo As String
	
	Private _Role As String
	
	Private _Seq As Integer
	
	Private _ProcessCode As String
	
	Private _ProcessName As String
	
	Private _JobType As Integer
	
	Private _Name As String
	
	Private _JobName As String
	
	Private _PlaceNbr As Integer
	
	Private _NamePlace As String
	
	Private _FloorNbr As Integer
	
	Private _NameFloor As String
	
	Private _Process As String
	
	Private _Division As String
	
	Private _Dept As String
	
	Private _Section As String
	
	Private _Tel As String
	
	Private _QuotationDeliveryDate As System.Nullable(Of Date)
	
	Private _ExpectedDate As System.Nullable(Of Date)
	
	Private _JobDetail As String
	
	Private _GroupID As Integer
	
	Private _SubGroupID As Integer
	
	Private _UserOPID As String
	
	Private _NickName As String
	
	Private _CreateDate As System.Nullable(Of Date)
	
	Private _UpdDate As Date
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WRNo", DbType:="Char(7) NOT NULL", CanBeNull:=false)>  _
	Public Property WRNo() As String
		Get
			Return Me._WRNo
		End Get
		Set
			If (String.Equals(Me._WRNo, value) = false) Then
				Me._WRNo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Role", DbType:="Char(20) NOT NULL", CanBeNull:=false)>  _
	Public Property Role() As String
		Get
			Return Me._Role
		End Get
		Set
			If (String.Equals(Me._Role, value) = false) Then
				Me._Role = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Seq", DbType:="Int NOT NULL")>  _
	Public Property Seq() As Integer
		Get
			Return Me._Seq
		End Get
		Set
			If ((Me._Seq = value)  _
						= false) Then
				Me._Seq = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProcessCode", DbType:="Char(10) NOT NULL", CanBeNull:=false)>  _
	Public Property ProcessCode() As String
		Get
			Return Me._ProcessCode
		End Get
		Set
			If (String.Equals(Me._ProcessCode, value) = false) Then
				Me._ProcessCode = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProcessName", DbType:="VarChar(100) NOT NULL", CanBeNull:=false)>  _
	Public Property ProcessName() As String
		Get
			Return Me._ProcessName
		End Get
		Set
			If (String.Equals(Me._ProcessName, value) = false) Then
				Me._ProcessName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_JobType", DbType:="Int NOT NULL")>  _
	Public Property JobType() As Integer
		Get
			Return Me._JobType
		End Get
		Set
			If ((Me._JobType = value)  _
						= false) Then
				Me._JobType = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Name() As String
		Get
			Return Me._Name
		End Get
		Set
			If (String.Equals(Me._Name, value) = false) Then
				Me._Name = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_JobName", DbType:="NVarChar(100) NOT NULL", CanBeNull:=false)>  _
	Public Property JobName() As String
		Get
			Return Me._JobName
		End Get
		Set
			If (String.Equals(Me._JobName, value) = false) Then
				Me._JobName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PlaceNbr", DbType:="Int NOT NULL")>  _
	Public Property PlaceNbr() As Integer
		Get
			Return Me._PlaceNbr
		End Get
		Set
			If ((Me._PlaceNbr = value)  _
						= false) Then
				Me._PlaceNbr = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NamePlace", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property NamePlace() As String
		Get
			Return Me._NamePlace
		End Get
		Set
			If (String.Equals(Me._NamePlace, value) = false) Then
				Me._NamePlace = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FloorNbr", DbType:="Int NOT NULL")>  _
	Public Property FloorNbr() As Integer
		Get
			Return Me._FloorNbr
		End Get
		Set
			If ((Me._FloorNbr = value)  _
						= false) Then
				Me._FloorNbr = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NameFloor", DbType:="NChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property NameFloor() As String
		Get
			Return Me._NameFloor
		End Get
		Set
			If (String.Equals(Me._NameFloor, value) = false) Then
				Me._NameFloor = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Process", DbType:="NVarChar(50)")>  _
	Public Property Process() As String
		Get
			Return Me._Process
		End Get
		Set
			If (String.Equals(Me._Process, value) = false) Then
				Me._Process = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Division", DbType:="NVarChar(50)")>  _
	Public Property Division() As String
		Get
			Return Me._Division
		End Get
		Set
			If (String.Equals(Me._Division, value) = false) Then
				Me._Division = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Dept", DbType:="NVarChar(50)")>  _
	Public Property Dept() As String
		Get
			Return Me._Dept
		End Get
		Set
			If (String.Equals(Me._Dept, value) = false) Then
				Me._Dept = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Section", DbType:="NVarChar(50)")>  _
	Public Property Section() As String
		Get
			Return Me._Section
		End Get
		Set
			If (String.Equals(Me._Section, value) = false) Then
				Me._Section = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tel", DbType:="NVarChar(50)")>  _
	Public Property Tel() As String
		Get
			Return Me._Tel
		End Get
		Set
			If (String.Equals(Me._Tel, value) = false) Then
				Me._Tel = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QuotationDeliveryDate", DbType:="Date")>  _
	Public Property QuotationDeliveryDate() As System.Nullable(Of Date)
		Get
			Return Me._QuotationDeliveryDate
		End Get
		Set
			If (Me._QuotationDeliveryDate.Equals(value) = false) Then
				Me._QuotationDeliveryDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ExpectedDate", DbType:="Date")>  _
	Public Property ExpectedDate() As System.Nullable(Of Date)
		Get
			Return Me._ExpectedDate
		End Get
		Set
			If (Me._ExpectedDate.Equals(value) = false) Then
				Me._ExpectedDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_JobDetail", DbType:="NVarChar(200)")>  _
	Public Property JobDetail() As String
		Get
			Return Me._JobDetail
		End Get
		Set
			If (String.Equals(Me._JobDetail, value) = false) Then
				Me._JobDetail = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GroupID", DbType:="Int NOT NULL")>  _
	Public Property GroupID() As Integer
		Get
			Return Me._GroupID
		End Get
		Set
			If ((Me._GroupID = value)  _
						= false) Then
				Me._GroupID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubGroupID", DbType:="Int NOT NULL")>  _
	Public Property SubGroupID() As Integer
		Get
			Return Me._SubGroupID
		End Get
		Set
			If ((Me._SubGroupID = value)  _
						= false) Then
				Me._SubGroupID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserOPID", DbType:="Char(6) NOT NULL", CanBeNull:=false)>  _
	Public Property UserOPID() As String
		Get
			Return Me._UserOPID
		End Get
		Set
			If (String.Equals(Me._UserOPID, value) = false) Then
				Me._UserOPID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NickName", DbType:="NVarChar(4000)")>  _
	Public Property NickName() As String
		Get
			Return Me._NickName
		End Get
		Set
			If (String.Equals(Me._NickName, value) = false) Then
				Me._NickName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreateDate", DbType:="DateTime")>  _
	Public Property CreateDate() As System.Nullable(Of Date)
		Get
			Return Me._CreateDate
		End Get
		Set
			If (Me._CreateDate.Equals(value) = false) Then
				Me._CreateDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UpdDate", DbType:="DateTime NOT NULL")>  _
	Public Property UpdDate() As Date
		Get
			Return Me._UpdDate
		End Get
		Set
			If ((Me._UpdDate = value)  _
						= false) Then
				Me._UpdDate = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.vewWorkRequestStatus")>  _
Partial Public Class vewWorkRequestStatus
	
	Private _WRNo As String
	
	Private _Role As String
	
	Private _RequestDate As String
	
	Private _JobName As String
	
	Private _SupplierName As String
	
	Private _QuotationAmt As System.Nullable(Of Decimal)
	
	Private _ExpectedDellivery As String
	
	Private _Seq As Integer
	
	Private _Status As String
	
	Private _StartPlan As String
	
	Private _FinishPlan As String
	
	Private _Dept As String
	
	Private _Requester As String
	
	Private _QuotationNo As String
	
	Private _QuotationDate As String
	
	Private _PRNo As String
	
	Private _PONo As String
	
	Private _PODate As String
	
	Private _InvoiceNo As String
	
	Private _ExpectedDate As String
	
	Private _Tel As String
	
	Private _UpdDate As String
	
	Private _MONTHNAME As String
	
	Private _MONTH As System.Nullable(Of Integer)
	
	Private _YEAR As System.Nullable(Of Integer)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WRNo", DbType:="Char(7) NOT NULL", CanBeNull:=false)>  _
	Public Property WRNo() As String
		Get
			Return Me._WRNo
		End Get
		Set
			If (String.Equals(Me._WRNo, value) = false) Then
				Me._WRNo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Role", DbType:="Char(20) NOT NULL", CanBeNull:=false)>  _
	Public Property Role() As String
		Get
			Return Me._Role
		End Get
		Set
			If (String.Equals(Me._Role, value) = false) Then
				Me._Role = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RequestDate", DbType:="VarChar(8)")>  _
	Public Property RequestDate() As String
		Get
			Return Me._RequestDate
		End Get
		Set
			If (String.Equals(Me._RequestDate, value) = false) Then
				Me._RequestDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_JobName", DbType:="NVarChar(100) NOT NULL", CanBeNull:=false)>  _
	Public Property JobName() As String
		Get
			Return Me._JobName
		End Get
		Set
			If (String.Equals(Me._JobName, value) = false) Then
				Me._JobName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SupplierName", DbType:="NVarChar(MAX)")>  _
	Public Property SupplierName() As String
		Get
			Return Me._SupplierName
		End Get
		Set
			If (String.Equals(Me._SupplierName, value) = false) Then
				Me._SupplierName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QuotationAmt", DbType:="Decimal(38,2)")>  _
	Public Property QuotationAmt() As System.Nullable(Of Decimal)
		Get
			Return Me._QuotationAmt
		End Get
		Set
			If (Me._QuotationAmt.Equals(value) = false) Then
				Me._QuotationAmt = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ExpectedDellivery", DbType:="VarChar(8)")>  _
	Public Property ExpectedDellivery() As String
		Get
			Return Me._ExpectedDellivery
		End Get
		Set
			If (String.Equals(Me._ExpectedDellivery, value) = false) Then
				Me._ExpectedDellivery = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Seq", DbType:="Int NOT NULL")>  _
	Public Property Seq() As Integer
		Get
			Return Me._Seq
		End Get
		Set
			If ((Me._Seq = value)  _
						= false) Then
				Me._Seq = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Status", DbType:="VarChar(100) NOT NULL", CanBeNull:=false)>  _
	Public Property Status() As String
		Get
			Return Me._Status
		End Get
		Set
			If (String.Equals(Me._Status, value) = false) Then
				Me._Status = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StartPlan", DbType:="VarChar(8)")>  _
	Public Property StartPlan() As String
		Get
			Return Me._StartPlan
		End Get
		Set
			If (String.Equals(Me._StartPlan, value) = false) Then
				Me._StartPlan = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FinishPlan", DbType:="VarChar(8)")>  _
	Public Property FinishPlan() As String
		Get
			Return Me._FinishPlan
		End Get
		Set
			If (String.Equals(Me._FinishPlan, value) = false) Then
				Me._FinishPlan = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Dept", DbType:="NVarChar(50)")>  _
	Public Property Dept() As String
		Get
			Return Me._Dept
		End Get
		Set
			If (String.Equals(Me._Dept, value) = false) Then
				Me._Dept = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Requester", DbType:="NVarChar(4000)")>  _
	Public Property Requester() As String
		Get
			Return Me._Requester
		End Get
		Set
			If (String.Equals(Me._Requester, value) = false) Then
				Me._Requester = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QuotationNo", DbType:="NVarChar(MAX)")>  _
	Public Property QuotationNo() As String
		Get
			Return Me._QuotationNo
		End Get
		Set
			If (String.Equals(Me._QuotationNo, value) = false) Then
				Me._QuotationNo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QuotationDate", DbType:="NVarChar(MAX)")>  _
	Public Property QuotationDate() As String
		Get
			Return Me._QuotationDate
		End Get
		Set
			If (String.Equals(Me._QuotationDate, value) = false) Then
				Me._QuotationDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRNo", DbType:="NVarChar(MAX)")>  _
	Public Property PRNo() As String
		Get
			Return Me._PRNo
		End Get
		Set
			If (String.Equals(Me._PRNo, value) = false) Then
				Me._PRNo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PONo", DbType:="NVarChar(MAX)")>  _
	Public Property PONo() As String
		Get
			Return Me._PONo
		End Get
		Set
			If (String.Equals(Me._PONo, value) = false) Then
				Me._PONo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PODate", DbType:="NVarChar(MAX)")>  _
	Public Property PODate() As String
		Get
			Return Me._PODate
		End Get
		Set
			If (String.Equals(Me._PODate, value) = false) Then
				Me._PODate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InvoiceNo", DbType:="NVarChar(MAX)")>  _
	Public Property InvoiceNo() As String
		Get
			Return Me._InvoiceNo
		End Get
		Set
			If (String.Equals(Me._InvoiceNo, value) = false) Then
				Me._InvoiceNo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ExpectedDate", DbType:="VarChar(8)")>  _
	Public Property ExpectedDate() As String
		Get
			Return Me._ExpectedDate
		End Get
		Set
			If (String.Equals(Me._ExpectedDate, value) = false) Then
				Me._ExpectedDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tel", DbType:="NVarChar(50)")>  _
	Public Property Tel() As String
		Get
			Return Me._Tel
		End Get
		Set
			If (String.Equals(Me._Tel, value) = false) Then
				Me._Tel = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UpdDate", DbType:="VarChar(19)")>  _
	Public Property UpdDate() As String
		Get
			Return Me._UpdDate
		End Get
		Set
			If (String.Equals(Me._UpdDate, value) = false) Then
				Me._UpdDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MONTHNAME", DbType:="NVarChar(30)")>  _
	Public Property MONTHNAME() As String
		Get
			Return Me._MONTHNAME
		End Get
		Set
			If (String.Equals(Me._MONTHNAME, value) = false) Then
				Me._MONTHNAME = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MONTH", DbType:="Int")>  _
	Public Property MONTH() As System.Nullable(Of Integer)
		Get
			Return Me._MONTH
		End Get
		Set
			If (Me._MONTH.Equals(value) = false) Then
				Me._MONTH = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_YEAR", DbType:="Int")>  _
	Public Property YEAR() As System.Nullable(Of Integer)
		Get
			Return Me._YEAR
		End Get
		Set
			If (Me._YEAR.Equals(value) = false) Then
				Me._YEAR = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.FileAttach")>  _
Partial Public Class FileAttach
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _FileNbr As Integer
	
	Private _Grp As String
	
	Private _WRNo As String
	
	Private _Seq As Integer
	
	Private _FileAttach() As Byte
	
	Private _FileName As String
	
	Private _Extension As String
	
	Private _SupplierName As String
	
	Private _QuotationDate As System.Nullable(Of Date)
	
	Private _QuotationAmt As System.Nullable(Of Decimal)
	
	Private _OPID As String
	
	Private _UpdDate As Date
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnFileNbrChanging(value As Integer)
    End Sub
    Partial Private Sub OnFileNbrChanged()
    End Sub
    Partial Private Sub OnGrpChanging(value As String)
    End Sub
    Partial Private Sub OnGrpChanged()
    End Sub
    Partial Private Sub OnWRNoChanging(value As String)
    End Sub
    Partial Private Sub OnWRNoChanged()
    End Sub
    Partial Private Sub OnSeqChanging(value As Integer)
    End Sub
    Partial Private Sub OnSeqChanged()
    End Sub
    Partial Private Sub OnFileAttachChanging(value As Byte())
    End Sub
    Partial Private Sub OnFileAttachChanged()
    End Sub
    Partial Private Sub OnFileNameChanging(value As String)
    End Sub
    Partial Private Sub OnFileNameChanged()
    End Sub
    Partial Private Sub OnExtensionChanging(value As String)
    End Sub
    Partial Private Sub OnExtensionChanged()
    End Sub
    Partial Private Sub OnSupplierNameChanging(value As String)
    End Sub
    Partial Private Sub OnSupplierNameChanged()
    End Sub
    Partial Private Sub OnQuotationDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnQuotationDateChanged()
    End Sub
    Partial Private Sub OnQuotationAmtChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnQuotationAmtChanged()
    End Sub
    Partial Private Sub OnOPIDChanging(value As String)
    End Sub
    Partial Private Sub OnOPIDChanged()
    End Sub
    Partial Private Sub OnUpdDateChanging(value As Date)
    End Sub
    Partial Private Sub OnUpdDateChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FileNbr", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property FileNbr() As Integer
		Get
			Return Me._FileNbr
		End Get
		Set
			If ((Me._FileNbr = value)  _
						= false) Then
				Me.OnFileNbrChanging(value)
				Me.SendPropertyChanging
				Me._FileNbr = value
				Me.SendPropertyChanged("FileNbr")
				Me.OnFileNbrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Grp", DbType:="Char(3) NOT NULL", CanBeNull:=false)>  _
	Public Property Grp() As String
		Get
			Return Me._Grp
		End Get
		Set
			If (String.Equals(Me._Grp, value) = false) Then
				Me.OnGrpChanging(value)
				Me.SendPropertyChanging
				Me._Grp = value
				Me.SendPropertyChanged("Grp")
				Me.OnGrpChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WRNo", DbType:="Char(7) NOT NULL", CanBeNull:=false)>  _
	Public Property WRNo() As String
		Get
			Return Me._WRNo
		End Get
		Set
			If (String.Equals(Me._WRNo, value) = false) Then
				Me.OnWRNoChanging(value)
				Me.SendPropertyChanging
				Me._WRNo = value
				Me.SendPropertyChanged("WRNo")
				Me.OnWRNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Seq", DbType:="Int NOT NULL")>  _
	Public Property Seq() As Integer
		Get
			Return Me._Seq
		End Get
		Set
			If ((Me._Seq = value)  _
						= false) Then
				Me.OnSeqChanging(value)
				Me.SendPropertyChanging
				Me._Seq = value
				Me.SendPropertyChanged("Seq")
				Me.OnSeqChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FileAttach", DbType:="VarBinary(MAX)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property FileAttach() As Byte()
		Get
			Return Me._FileAttach
		End Get
		Set
			If (Object.Equals(Me._FileAttach, value) = false) Then
				Me.OnFileAttachChanging(value)
				Me.SendPropertyChanging
				Me._FileAttach = value
				Me.SendPropertyChanged("FileAttach")
				Me.OnFileAttachChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FileName", DbType:="NChar(40)")>  _
	Public Property FileName() As String
		Get
			Return Me._FileName
		End Get
		Set
			If (String.Equals(Me._FileName, value) = false) Then
				Me.OnFileNameChanging(value)
				Me.SendPropertyChanging
				Me._FileName = value
				Me.SendPropertyChanged("FileName")
				Me.OnFileNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Extension", DbType:="NChar(40)")>  _
	Public Property Extension() As String
		Get
			Return Me._Extension
		End Get
		Set
			If (String.Equals(Me._Extension, value) = false) Then
				Me.OnExtensionChanging(value)
				Me.SendPropertyChanging
				Me._Extension = value
				Me.SendPropertyChanged("Extension")
				Me.OnExtensionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SupplierName", DbType:="NVarChar(255)")>  _
	Public Property SupplierName() As String
		Get
			Return Me._SupplierName
		End Get
		Set
			If (String.Equals(Me._SupplierName, value) = false) Then
				Me.OnSupplierNameChanging(value)
				Me.SendPropertyChanging
				Me._SupplierName = value
				Me.SendPropertyChanged("SupplierName")
				Me.OnSupplierNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QuotationDate", DbType:="Date")>  _
	Public Property QuotationDate() As System.Nullable(Of Date)
		Get
			Return Me._QuotationDate
		End Get
		Set
			If (Me._QuotationDate.Equals(value) = false) Then
				Me.OnQuotationDateChanging(value)
				Me.SendPropertyChanging
				Me._QuotationDate = value
				Me.SendPropertyChanged("QuotationDate")
				Me.OnQuotationDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QuotationAmt", DbType:="Decimal(18,2)")>  _
	Public Property QuotationAmt() As System.Nullable(Of Decimal)
		Get
			Return Me._QuotationAmt
		End Get
		Set
			If (Me._QuotationAmt.Equals(value) = false) Then
				Me.OnQuotationAmtChanging(value)
				Me.SendPropertyChanging
				Me._QuotationAmt = value
				Me.SendPropertyChanged("QuotationAmt")
				Me.OnQuotationAmtChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OPID", DbType:="Char(6) NOT NULL", CanBeNull:=false)>  _
	Public Property OPID() As String
		Get
			Return Me._OPID
		End Get
		Set
			If (String.Equals(Me._OPID, value) = false) Then
				Me.OnOPIDChanging(value)
				Me.SendPropertyChanging
				Me._OPID = value
				Me.SendPropertyChanged("OPID")
				Me.OnOPIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UpdDate", DbType:="DateTime NOT NULL")>  _
	Public Property UpdDate() As Date
		Get
			Return Me._UpdDate
		End Get
		Set
			If ((Me._UpdDate = value)  _
						= false) Then
				Me.OnUpdDateChanging(value)
				Me.SendPropertyChanging
				Me._UpdDate = value
				Me.SendPropertyChanged("UpdDate")
				Me.OnUpdDateChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.vewOperator")>  _
Partial Public Class vewOperator
	
	Private _ID As Integer
	
	Private _OPID As String
	
	Private _PW As String
	
	Private _GroupID As Integer
	
	Private _SubGroupID As Integer
	
	Private _SecurityRole As Integer
	
	Private _SecurityLevel As Integer
	
	Private _NameEng As String
	
	Private _FullName As String
	
	Private _NickName As String
	
	Private _Email As String
	
	Private _Divsion As String
	
	Private _Section As String
	
	Private _Department1 As String
	
	Private _Department2 As String
	
	Private _Department3 As String
	
	Private _Organiztion As String
	
	Private _Position As String
	
	Private _EmpLevel As System.Nullable(Of Integer)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", DbType:="Int NOT NULL")>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me._ID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OPID", DbType:="Char(6) NOT NULL", CanBeNull:=false)>  _
	Public Property OPID() As String
		Get
			Return Me._OPID
		End Get
		Set
			If (String.Equals(Me._OPID, value) = false) Then
				Me._OPID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PW", DbType:="Char(4) NOT NULL", CanBeNull:=false)>  _
	Public Property PW() As String
		Get
			Return Me._PW
		End Get
		Set
			If (String.Equals(Me._PW, value) = false) Then
				Me._PW = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GroupID", DbType:="Int NOT NULL")>  _
	Public Property GroupID() As Integer
		Get
			Return Me._GroupID
		End Get
		Set
			If ((Me._GroupID = value)  _
						= false) Then
				Me._GroupID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubGroupID", DbType:="Int NOT NULL")>  _
	Public Property SubGroupID() As Integer
		Get
			Return Me._SubGroupID
		End Get
		Set
			If ((Me._SubGroupID = value)  _
						= false) Then
				Me._SubGroupID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SecurityRole", DbType:="Int NOT NULL")>  _
	Public Property SecurityRole() As Integer
		Get
			Return Me._SecurityRole
		End Get
		Set
			If ((Me._SecurityRole = value)  _
						= false) Then
				Me._SecurityRole = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SecurityLevel", DbType:="Int NOT NULL")>  _
	Public Property SecurityLevel() As Integer
		Get
			Return Me._SecurityLevel
		End Get
		Set
			If ((Me._SecurityLevel = value)  _
						= false) Then
				Me._SecurityLevel = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NameEng", DbType:="NVarChar(100) NOT NULL", CanBeNull:=false)>  _
	Public Property NameEng() As String
		Get
			Return Me._NameEng
		End Get
		Set
			If (String.Equals(Me._NameEng, value) = false) Then
				Me._NameEng = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FullName", DbType:="NVarChar(4000)")>  _
	Public Property FullName() As String
		Get
			Return Me._FullName
		End Get
		Set
			If (String.Equals(Me._FullName, value) = false) Then
				Me._FullName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NickName", DbType:="NVarChar(4000)")>  _
	Public Property NickName() As String
		Get
			Return Me._NickName
		End Get
		Set
			If (String.Equals(Me._NickName, value) = false) Then
				Me._NickName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Email", DbType:="NVarChar(100)")>  _
	Public Property Email() As String
		Get
			Return Me._Email
		End Get
		Set
			If (String.Equals(Me._Email, value) = false) Then
				Me._Email = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Divsion", DbType:="NVarChar(100)")>  _
	Public Property Divsion() As String
		Get
			Return Me._Divsion
		End Get
		Set
			If (String.Equals(Me._Divsion, value) = false) Then
				Me._Divsion = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Section", DbType:="NVarChar(100)")>  _
	Public Property Section() As String
		Get
			Return Me._Section
		End Get
		Set
			If (String.Equals(Me._Section, value) = false) Then
				Me._Section = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Department1", DbType:="NVarChar(100)")>  _
	Public Property Department1() As String
		Get
			Return Me._Department1
		End Get
		Set
			If (String.Equals(Me._Department1, value) = false) Then
				Me._Department1 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Department2", DbType:="NVarChar(100)")>  _
	Public Property Department2() As String
		Get
			Return Me._Department2
		End Get
		Set
			If (String.Equals(Me._Department2, value) = false) Then
				Me._Department2 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Department3", DbType:="NVarChar(100)")>  _
	Public Property Department3() As String
		Get
			Return Me._Department3
		End Get
		Set
			If (String.Equals(Me._Department3, value) = false) Then
				Me._Department3 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Organiztion", DbType:="NVarChar(100)")>  _
	Public Property Organiztion() As String
		Get
			Return Me._Organiztion
		End Get
		Set
			If (String.Equals(Me._Organiztion, value) = false) Then
				Me._Organiztion = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Position", DbType:="NVarChar(100)")>  _
	Public Property Position() As String
		Get
			Return Me._Position
		End Get
		Set
			If (String.Equals(Me._Position, value) = false) Then
				Me._Position = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EmpLevel", DbType:="Int")>  _
	Public Property EmpLevel() As System.Nullable(Of Integer)
		Get
			Return Me._EmpLevel
		End Get
		Set
			If (Me._EmpLevel.Equals(value) = false) Then
				Me._EmpLevel = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.vewStyle")>  _
Partial Public Class vewStyle
	
	Private _GrpPage As String
	
	Private _Seq As Integer
	
	Private _SecurityRole As Integer
	
	Private _Action1 As System.Nullable(Of Boolean)
	
	Private _Action2 As System.Nullable(Of Boolean)
	
	Private _Action3 As System.Nullable(Of Boolean)
	
	Private _Action4 As System.Nullable(Of Boolean)
	
	Private _Action5 As System.Nullable(Of Boolean)
	
	Private _Action6 As System.Nullable(Of Boolean)
	
	Private _Action7 As System.Nullable(Of Boolean)
	
	Private _Action8 As System.Nullable(Of Boolean)
	
	Private _Action9 As System.Nullable(Of Boolean)
	
	Private _Action10 As System.Nullable(Of Boolean)
	
	Private _Action11 As System.Nullable(Of Boolean)
	
	Private _Action12 As System.Nullable(Of Boolean)
	
	Private _Action13 As System.Nullable(Of Boolean)
	
	Private _Status_Text As String
	
	Private _Status_CssClass As String
	
	Private _Status_Enabled As System.Nullable(Of Boolean)
	
	Private _Status_ToolTip As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GrpPage", DbType:="NChar(20) NOT NULL", CanBeNull:=false)>  _
	Public Property GrpPage() As String
		Get
			Return Me._GrpPage
		End Get
		Set
			If (String.Equals(Me._GrpPage, value) = false) Then
				Me._GrpPage = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Seq", DbType:="Int NOT NULL")>  _
	Public Property Seq() As Integer
		Get
			Return Me._Seq
		End Get
		Set
			If ((Me._Seq = value)  _
						= false) Then
				Me._Seq = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SecurityRole", DbType:="Int NOT NULL")>  _
	Public Property SecurityRole() As Integer
		Get
			Return Me._SecurityRole
		End Get
		Set
			If ((Me._SecurityRole = value)  _
						= false) Then
				Me._SecurityRole = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Action1", DbType:="Bit")>  _
	Public Property Action1() As System.Nullable(Of Boolean)
		Get
			Return Me._Action1
		End Get
		Set
			If (Me._Action1.Equals(value) = false) Then
				Me._Action1 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Action2", DbType:="Bit")>  _
	Public Property Action2() As System.Nullable(Of Boolean)
		Get
			Return Me._Action2
		End Get
		Set
			If (Me._Action2.Equals(value) = false) Then
				Me._Action2 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Action3", DbType:="Bit")>  _
	Public Property Action3() As System.Nullable(Of Boolean)
		Get
			Return Me._Action3
		End Get
		Set
			If (Me._Action3.Equals(value) = false) Then
				Me._Action3 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Action4", DbType:="Bit")>  _
	Public Property Action4() As System.Nullable(Of Boolean)
		Get
			Return Me._Action4
		End Get
		Set
			If (Me._Action4.Equals(value) = false) Then
				Me._Action4 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Action5", DbType:="Bit")>  _
	Public Property Action5() As System.Nullable(Of Boolean)
		Get
			Return Me._Action5
		End Get
		Set
			If (Me._Action5.Equals(value) = false) Then
				Me._Action5 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Action6", DbType:="Bit")>  _
	Public Property Action6() As System.Nullable(Of Boolean)
		Get
			Return Me._Action6
		End Get
		Set
			If (Me._Action6.Equals(value) = false) Then
				Me._Action6 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Action7", DbType:="Bit")>  _
	Public Property Action7() As System.Nullable(Of Boolean)
		Get
			Return Me._Action7
		End Get
		Set
			If (Me._Action7.Equals(value) = false) Then
				Me._Action7 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Action8", DbType:="Bit")>  _
	Public Property Action8() As System.Nullable(Of Boolean)
		Get
			Return Me._Action8
		End Get
		Set
			If (Me._Action8.Equals(value) = false) Then
				Me._Action8 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Action9", DbType:="Bit")>  _
	Public Property Action9() As System.Nullable(Of Boolean)
		Get
			Return Me._Action9
		End Get
		Set
			If (Me._Action9.Equals(value) = false) Then
				Me._Action9 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Action10", DbType:="Bit")>  _
	Public Property Action10() As System.Nullable(Of Boolean)
		Get
			Return Me._Action10
		End Get
		Set
			If (Me._Action10.Equals(value) = false) Then
				Me._Action10 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Action11", DbType:="Bit")>  _
	Public Property Action11() As System.Nullable(Of Boolean)
		Get
			Return Me._Action11
		End Get
		Set
			If (Me._Action11.Equals(value) = false) Then
				Me._Action11 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Action12", DbType:="Bit")>  _
	Public Property Action12() As System.Nullable(Of Boolean)
		Get
			Return Me._Action12
		End Get
		Set
			If (Me._Action12.Equals(value) = false) Then
				Me._Action12 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Action13", DbType:="Bit")>  _
	Public Property Action13() As System.Nullable(Of Boolean)
		Get
			Return Me._Action13
		End Get
		Set
			If (Me._Action13.Equals(value) = false) Then
				Me._Action13 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Status_Text", DbType:="NChar(100)")>  _
	Public Property Status_Text() As String
		Get
			Return Me._Status_Text
		End Get
		Set
			If (String.Equals(Me._Status_Text, value) = false) Then
				Me._Status_Text = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Status_CssClass", DbType:="NChar(100)")>  _
	Public Property Status_CssClass() As String
		Get
			Return Me._Status_CssClass
		End Get
		Set
			If (String.Equals(Me._Status_CssClass, value) = false) Then
				Me._Status_CssClass = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Status_Enabled", DbType:="Bit")>  _
	Public Property Status_Enabled() As System.Nullable(Of Boolean)
		Get
			Return Me._Status_Enabled
		End Get
		Set
			If (Me._Status_Enabled.Equals(value) = false) Then
				Me._Status_Enabled = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Status_ToolTip", DbType:="NChar(100)")>  _
	Public Property Status_ToolTip() As String
		Get
			Return Me._Status_ToolTip
		End Get
		Set
			If (String.Equals(Me._Status_ToolTip, value) = false) Then
				Me._Status_ToolTip = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.WorkStatus")>  _
Partial Public Class WorkStatus
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _WRNo As String
	
	Private _Seq As Integer
	
	Private _PRNo As String
	
	Private _QuotationNo As String
	
	Private _PRNoUpd As Date
	
	Private _OPIDUpd As String
	
	Private _PONo As String
	
	Private _PODate As System.Nullable(Of Date)
	
	Private _PONoUpd As System.Nullable(Of Date)
	
	Private _InvoiceNo As String
	
	Private _InvoiceNoUpd As System.Nullable(Of Date)
	
	Private _Item As String
	
	Private _Specification As String
	
	Private _ItemCode As String
	
	Private _MakerName As String
	
	Private _Reason As String
	
	Private _Remarks As String
	
	Private _QTY As Decimal
	
	Private _Unit As String
	
	Private _UnitName As String
	
	Private _UnitPrice As System.Nullable(Of Decimal)
	
	Private _Amount As System.Nullable(Of Decimal)
	
	Private _Currency As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnWRNoChanging(value As String)
    End Sub
    Partial Private Sub OnWRNoChanged()
    End Sub
    Partial Private Sub OnSeqChanging(value As Integer)
    End Sub
    Partial Private Sub OnSeqChanged()
    End Sub
    Partial Private Sub OnPRNoChanging(value As String)
    End Sub
    Partial Private Sub OnPRNoChanged()
    End Sub
    Partial Private Sub OnQuotationNoChanging(value As String)
    End Sub
    Partial Private Sub OnQuotationNoChanged()
    End Sub
    Partial Private Sub OnPRNoUpdChanging(value As Date)
    End Sub
    Partial Private Sub OnPRNoUpdChanged()
    End Sub
    Partial Private Sub OnOPIDUpdChanging(value As String)
    End Sub
    Partial Private Sub OnOPIDUpdChanged()
    End Sub
    Partial Private Sub OnPONoChanging(value As String)
    End Sub
    Partial Private Sub OnPONoChanged()
    End Sub
    Partial Private Sub OnPODateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnPODateChanged()
    End Sub
    Partial Private Sub OnPONoUpdChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnPONoUpdChanged()
    End Sub
    Partial Private Sub OnInvoiceNoChanging(value As String)
    End Sub
    Partial Private Sub OnInvoiceNoChanged()
    End Sub
    Partial Private Sub OnInvoiceNoUpdChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnInvoiceNoUpdChanged()
    End Sub
    Partial Private Sub OnItemChanging(value As String)
    End Sub
    Partial Private Sub OnItemChanged()
    End Sub
    Partial Private Sub OnSpecificationChanging(value As String)
    End Sub
    Partial Private Sub OnSpecificationChanged()
    End Sub
    Partial Private Sub OnItemCodeChanging(value As String)
    End Sub
    Partial Private Sub OnItemCodeChanged()
    End Sub
    Partial Private Sub OnMakerNameChanging(value As String)
    End Sub
    Partial Private Sub OnMakerNameChanged()
    End Sub
    Partial Private Sub OnReasonChanging(value As String)
    End Sub
    Partial Private Sub OnReasonChanged()
    End Sub
    Partial Private Sub OnRemarksChanging(value As String)
    End Sub
    Partial Private Sub OnRemarksChanged()
    End Sub
    Partial Private Sub OnQTYChanging(value As Decimal)
    End Sub
    Partial Private Sub OnQTYChanged()
    End Sub
    Partial Private Sub OnUnitChanging(value As String)
    End Sub
    Partial Private Sub OnUnitChanged()
    End Sub
    Partial Private Sub OnUnitNameChanging(value As String)
    End Sub
    Partial Private Sub OnUnitNameChanged()
    End Sub
    Partial Private Sub OnUnitPriceChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnUnitPriceChanged()
    End Sub
    Partial Private Sub OnAmountChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnAmountChanged()
    End Sub
    Partial Private Sub OnCurrencyChanging(value As String)
    End Sub
    Partial Private Sub OnCurrencyChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WRNo", DbType:="Char(7) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property WRNo() As String
		Get
			Return Me._WRNo
		End Get
		Set
			If (String.Equals(Me._WRNo, value) = false) Then
				Me.OnWRNoChanging(value)
				Me.SendPropertyChanging
				Me._WRNo = value
				Me.SendPropertyChanged("WRNo")
				Me.OnWRNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Seq", DbType:="Int NOT NULL")>  _
	Public Property Seq() As Integer
		Get
			Return Me._Seq
		End Get
		Set
			If ((Me._Seq = value)  _
						= false) Then
				Me.OnSeqChanging(value)
				Me.SendPropertyChanging
				Me._Seq = value
				Me.SendPropertyChanged("Seq")
				Me.OnSeqChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRNo", DbType:="VarChar(25) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property PRNo() As String
		Get
			Return Me._PRNo
		End Get
		Set
			If (String.Equals(Me._PRNo, value) = false) Then
				Me.OnPRNoChanging(value)
				Me.SendPropertyChanging
				Me._PRNo = value
				Me.SendPropertyChanged("PRNo")
				Me.OnPRNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QuotationNo", DbType:="VarChar(25)")>  _
	Public Property QuotationNo() As String
		Get
			Return Me._QuotationNo
		End Get
		Set
			If (String.Equals(Me._QuotationNo, value) = false) Then
				Me.OnQuotationNoChanging(value)
				Me.SendPropertyChanging
				Me._QuotationNo = value
				Me.SendPropertyChanged("QuotationNo")
				Me.OnQuotationNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRNoUpd", DbType:="DateTime NOT NULL")>  _
	Public Property PRNoUpd() As Date
		Get
			Return Me._PRNoUpd
		End Get
		Set
			If ((Me._PRNoUpd = value)  _
						= false) Then
				Me.OnPRNoUpdChanging(value)
				Me.SendPropertyChanging
				Me._PRNoUpd = value
				Me.SendPropertyChanged("PRNoUpd")
				Me.OnPRNoUpdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OPIDUpd", DbType:="Char(6) NOT NULL", CanBeNull:=false)>  _
	Public Property OPIDUpd() As String
		Get
			Return Me._OPIDUpd
		End Get
		Set
			If (String.Equals(Me._OPIDUpd, value) = false) Then
				Me.OnOPIDUpdChanging(value)
				Me.SendPropertyChanging
				Me._OPIDUpd = value
				Me.SendPropertyChanged("OPIDUpd")
				Me.OnOPIDUpdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PONo", DbType:="Char(25)")>  _
	Public Property PONo() As String
		Get
			Return Me._PONo
		End Get
		Set
			If (String.Equals(Me._PONo, value) = false) Then
				Me.OnPONoChanging(value)
				Me.SendPropertyChanging
				Me._PONo = value
				Me.SendPropertyChanged("PONo")
				Me.OnPONoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PODate", DbType:="DateTime")>  _
	Public Property PODate() As System.Nullable(Of Date)
		Get
			Return Me._PODate
		End Get
		Set
			If (Me._PODate.Equals(value) = false) Then
				Me.OnPODateChanging(value)
				Me.SendPropertyChanging
				Me._PODate = value
				Me.SendPropertyChanged("PODate")
				Me.OnPODateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PONoUpd", DbType:="DateTime")>  _
	Public Property PONoUpd() As System.Nullable(Of Date)
		Get
			Return Me._PONoUpd
		End Get
		Set
			If (Me._PONoUpd.Equals(value) = false) Then
				Me.OnPONoUpdChanging(value)
				Me.SendPropertyChanging
				Me._PONoUpd = value
				Me.SendPropertyChanged("PONoUpd")
				Me.OnPONoUpdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InvoiceNo", DbType:="Char(25)")>  _
	Public Property InvoiceNo() As String
		Get
			Return Me._InvoiceNo
		End Get
		Set
			If (String.Equals(Me._InvoiceNo, value) = false) Then
				Me.OnInvoiceNoChanging(value)
				Me.SendPropertyChanging
				Me._InvoiceNo = value
				Me.SendPropertyChanged("InvoiceNo")
				Me.OnInvoiceNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InvoiceNoUpd", DbType:="DateTime")>  _
	Public Property InvoiceNoUpd() As System.Nullable(Of Date)
		Get
			Return Me._InvoiceNoUpd
		End Get
		Set
			If (Me._InvoiceNoUpd.Equals(value) = false) Then
				Me.OnInvoiceNoUpdChanging(value)
				Me.SendPropertyChanging
				Me._InvoiceNoUpd = value
				Me.SendPropertyChanged("InvoiceNoUpd")
				Me.OnInvoiceNoUpdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Item", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Item() As String
		Get
			Return Me._Item
		End Get
		Set
			If (String.Equals(Me._Item, value) = false) Then
				Me.OnItemChanging(value)
				Me.SendPropertyChanging
				Me._Item = value
				Me.SendPropertyChanged("Item")
				Me.OnItemChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Specification", DbType:="NVarChar(50)")>  _
	Public Property Specification() As String
		Get
			Return Me._Specification
		End Get
		Set
			If (String.Equals(Me._Specification, value) = false) Then
				Me.OnSpecificationChanging(value)
				Me.SendPropertyChanging
				Me._Specification = value
				Me.SendPropertyChanged("Specification")
				Me.OnSpecificationChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ItemCode", DbType:="Char(25) NOT NULL", CanBeNull:=false)>  _
	Public Property ItemCode() As String
		Get
			Return Me._ItemCode
		End Get
		Set
			If (String.Equals(Me._ItemCode, value) = false) Then
				Me.OnItemCodeChanging(value)
				Me.SendPropertyChanging
				Me._ItemCode = value
				Me.SendPropertyChanged("ItemCode")
				Me.OnItemCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MakerName", DbType:="NVarChar(100)")>  _
	Public Property MakerName() As String
		Get
			Return Me._MakerName
		End Get
		Set
			If (String.Equals(Me._MakerName, value) = false) Then
				Me.OnMakerNameChanging(value)
				Me.SendPropertyChanging
				Me._MakerName = value
				Me.SendPropertyChanged("MakerName")
				Me.OnMakerNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Reason", DbType:="NVarChar(100)")>  _
	Public Property Reason() As String
		Get
			Return Me._Reason
		End Get
		Set
			If (String.Equals(Me._Reason, value) = false) Then
				Me.OnReasonChanging(value)
				Me.SendPropertyChanging
				Me._Reason = value
				Me.SendPropertyChanged("Reason")
				Me.OnReasonChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Remarks", DbType:="NVarChar(100)")>  _
	Public Property Remarks() As String
		Get
			Return Me._Remarks
		End Get
		Set
			If (String.Equals(Me._Remarks, value) = false) Then
				Me.OnRemarksChanging(value)
				Me.SendPropertyChanging
				Me._Remarks = value
				Me.SendPropertyChanged("Remarks")
				Me.OnRemarksChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QTY", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property QTY() As Decimal
		Get
			Return Me._QTY
		End Get
		Set
			If ((Me._QTY = value)  _
						= false) Then
				Me.OnQTYChanging(value)
				Me.SendPropertyChanging
				Me._QTY = value
				Me.SendPropertyChanged("QTY")
				Me.OnQTYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Unit", DbType:="Char(2)")>  _
	Public Property Unit() As String
		Get
			Return Me._Unit
		End Get
		Set
			If (String.Equals(Me._Unit, value) = false) Then
				Me.OnUnitChanging(value)
				Me.SendPropertyChanging
				Me._Unit = value
				Me.SendPropertyChanged("Unit")
				Me.OnUnitChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UnitName", DbType:="NVarChar(30)")>  _
	Public Property UnitName() As String
		Get
			Return Me._UnitName
		End Get
		Set
			If (String.Equals(Me._UnitName, value) = false) Then
				Me.OnUnitNameChanging(value)
				Me.SendPropertyChanging
				Me._UnitName = value
				Me.SendPropertyChanged("UnitName")
				Me.OnUnitNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UnitPrice", DbType:="Decimal(18,4)")>  _
	Public Property UnitPrice() As System.Nullable(Of Decimal)
		Get
			Return Me._UnitPrice
		End Get
		Set
			If (Me._UnitPrice.Equals(value) = false) Then
				Me.OnUnitPriceChanging(value)
				Me.SendPropertyChanging
				Me._UnitPrice = value
				Me.SendPropertyChanged("UnitPrice")
				Me.OnUnitPriceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Amount", DbType:="Decimal(18,2)")>  _
	Public Property Amount() As System.Nullable(Of Decimal)
		Get
			Return Me._Amount
		End Get
		Set
			If (Me._Amount.Equals(value) = false) Then
				Me.OnAmountChanging(value)
				Me.SendPropertyChanging
				Me._Amount = value
				Me.SendPropertyChanged("Amount")
				Me.OnAmountChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Currency", DbType:="Char(3)")>  _
	Public Property Currency() As String
		Get
			Return Me._Currency
		End Get
		Set
			If (String.Equals(Me._Currency, value) = false) Then
				Me.OnCurrencyChanging(value)
				Me.SendPropertyChanging
				Me._Currency = value
				Me.SendPropertyChanged("Currency")
				Me.OnCurrencyChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.vewWorkRequest_Special_1")>  _
Partial Public Class vewWorkRequest_Special_1
	
	Private _WRNo As String
	
	Private _Role As String
	
	Private _Seq As Integer
	
	Private _ProcessCode As String
	
	Private _ProcessName As String
	
	Private _JobType As Integer
	
	Private _Name As String
	
	Private _JobName As String
	
	Private _PlaceNbr As Integer
	
	Private _NamePlace As String
	
	Private _FloorNbr As Integer
	
	Private _NameFloor As String
	
	Private _Process As String
	
	Private _Division As String
	
	Private _Dept As String
	
	Private _Section As String
	
	Private _Tel As String
	
	Private _QuotationDeliveryDate As System.Nullable(Of Date)
	
	Private _ExpectedDate As System.Nullable(Of Date)
	
	Private _JobDetail As String
	
	Private _GroupID As Integer
	
	Private _SubGroupID As Integer
	
	Private _UserOPID As String
	
	Private _NickName As String
	
	Private _CreateDate As System.Nullable(Of Date)
	
	Private _UpdDate As Date
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WRNo", DbType:="Char(7) NOT NULL", CanBeNull:=false)>  _
	Public Property WRNo() As String
		Get
			Return Me._WRNo
		End Get
		Set
			If (String.Equals(Me._WRNo, value) = false) Then
				Me._WRNo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Role", DbType:="Char(20) NOT NULL", CanBeNull:=false)>  _
	Public Property Role() As String
		Get
			Return Me._Role
		End Get
		Set
			If (String.Equals(Me._Role, value) = false) Then
				Me._Role = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Seq", DbType:="Int NOT NULL")>  _
	Public Property Seq() As Integer
		Get
			Return Me._Seq
		End Get
		Set
			If ((Me._Seq = value)  _
						= false) Then
				Me._Seq = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProcessCode", DbType:="Char(10) NOT NULL", CanBeNull:=false)>  _
	Public Property ProcessCode() As String
		Get
			Return Me._ProcessCode
		End Get
		Set
			If (String.Equals(Me._ProcessCode, value) = false) Then
				Me._ProcessCode = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProcessName", DbType:="VarChar(100) NOT NULL", CanBeNull:=false)>  _
	Public Property ProcessName() As String
		Get
			Return Me._ProcessName
		End Get
		Set
			If (String.Equals(Me._ProcessName, value) = false) Then
				Me._ProcessName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_JobType", DbType:="Int NOT NULL")>  _
	Public Property JobType() As Integer
		Get
			Return Me._JobType
		End Get
		Set
			If ((Me._JobType = value)  _
						= false) Then
				Me._JobType = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Name() As String
		Get
			Return Me._Name
		End Get
		Set
			If (String.Equals(Me._Name, value) = false) Then
				Me._Name = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_JobName", DbType:="NVarChar(100) NOT NULL", CanBeNull:=false)>  _
	Public Property JobName() As String
		Get
			Return Me._JobName
		End Get
		Set
			If (String.Equals(Me._JobName, value) = false) Then
				Me._JobName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PlaceNbr", DbType:="Int NOT NULL")>  _
	Public Property PlaceNbr() As Integer
		Get
			Return Me._PlaceNbr
		End Get
		Set
			If ((Me._PlaceNbr = value)  _
						= false) Then
				Me._PlaceNbr = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NamePlace", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property NamePlace() As String
		Get
			Return Me._NamePlace
		End Get
		Set
			If (String.Equals(Me._NamePlace, value) = false) Then
				Me._NamePlace = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FloorNbr", DbType:="Int NOT NULL")>  _
	Public Property FloorNbr() As Integer
		Get
			Return Me._FloorNbr
		End Get
		Set
			If ((Me._FloorNbr = value)  _
						= false) Then
				Me._FloorNbr = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NameFloor", DbType:="NChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property NameFloor() As String
		Get
			Return Me._NameFloor
		End Get
		Set
			If (String.Equals(Me._NameFloor, value) = false) Then
				Me._NameFloor = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Process", DbType:="NVarChar(50)")>  _
	Public Property Process() As String
		Get
			Return Me._Process
		End Get
		Set
			If (String.Equals(Me._Process, value) = false) Then
				Me._Process = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Division", DbType:="NVarChar(50)")>  _
	Public Property Division() As String
		Get
			Return Me._Division
		End Get
		Set
			If (String.Equals(Me._Division, value) = false) Then
				Me._Division = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Dept", DbType:="NVarChar(50)")>  _
	Public Property Dept() As String
		Get
			Return Me._Dept
		End Get
		Set
			If (String.Equals(Me._Dept, value) = false) Then
				Me._Dept = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Section", DbType:="NVarChar(50)")>  _
	Public Property Section() As String
		Get
			Return Me._Section
		End Get
		Set
			If (String.Equals(Me._Section, value) = false) Then
				Me._Section = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tel", DbType:="NVarChar(50)")>  _
	Public Property Tel() As String
		Get
			Return Me._Tel
		End Get
		Set
			If (String.Equals(Me._Tel, value) = false) Then
				Me._Tel = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QuotationDeliveryDate", DbType:="Date")>  _
	Public Property QuotationDeliveryDate() As System.Nullable(Of Date)
		Get
			Return Me._QuotationDeliveryDate
		End Get
		Set
			If (Me._QuotationDeliveryDate.Equals(value) = false) Then
				Me._QuotationDeliveryDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ExpectedDate", DbType:="Date")>  _
	Public Property ExpectedDate() As System.Nullable(Of Date)
		Get
			Return Me._ExpectedDate
		End Get
		Set
			If (Me._ExpectedDate.Equals(value) = false) Then
				Me._ExpectedDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_JobDetail", DbType:="NVarChar(200)")>  _
	Public Property JobDetail() As String
		Get
			Return Me._JobDetail
		End Get
		Set
			If (String.Equals(Me._JobDetail, value) = false) Then
				Me._JobDetail = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GroupID", DbType:="Int NOT NULL")>  _
	Public Property GroupID() As Integer
		Get
			Return Me._GroupID
		End Get
		Set
			If ((Me._GroupID = value)  _
						= false) Then
				Me._GroupID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubGroupID", DbType:="Int NOT NULL")>  _
	Public Property SubGroupID() As Integer
		Get
			Return Me._SubGroupID
		End Get
		Set
			If ((Me._SubGroupID = value)  _
						= false) Then
				Me._SubGroupID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserOPID", DbType:="Char(6) NOT NULL", CanBeNull:=false)>  _
	Public Property UserOPID() As String
		Get
			Return Me._UserOPID
		End Get
		Set
			If (String.Equals(Me._UserOPID, value) = false) Then
				Me._UserOPID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NickName", DbType:="NVarChar(4000)")>  _
	Public Property NickName() As String
		Get
			Return Me._NickName
		End Get
		Set
			If (String.Equals(Me._NickName, value) = false) Then
				Me._NickName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreateDate", DbType:="Date")>  _
	Public Property CreateDate() As System.Nullable(Of Date)
		Get
			Return Me._CreateDate
		End Get
		Set
			If (Me._CreateDate.Equals(value) = false) Then
				Me._CreateDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UpdDate", DbType:="DateTime NOT NULL")>  _
	Public Property UpdDate() As Date
		Get
			Return Me._UpdDate
		End Get
		Set
			If ((Me._UpdDate = value)  _
						= false) Then
				Me._UpdDate = value
			End If
		End Set
	End Property
End Class

Partial Public Class sprOperatorReqFlowResult
	
	Private _OPID As String
	
	Private _NameEng As String
	
	Private _FullName As String
	
	Private _Email As String
	
	Private _NickName As String
	
	Private _SeqNo As System.Nullable(Of Integer)
	
	Private _NextSeqNo As System.Nullable(Of Integer)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OPID", DbType:="Char(6) NOT NULL", CanBeNull:=false)>  _
	Public Property OPID() As String
		Get
			Return Me._OPID
		End Get
		Set
			If (String.Equals(Me._OPID, value) = false) Then
				Me._OPID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NameEng", DbType:="NVarChar(100) NOT NULL", CanBeNull:=false)>  _
	Public Property NameEng() As String
		Get
			Return Me._NameEng
		End Get
		Set
			If (String.Equals(Me._NameEng, value) = false) Then
				Me._NameEng = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FullName", DbType:="NVarChar(4000)")>  _
	Public Property FullName() As String
		Get
			Return Me._FullName
		End Get
		Set
			If (String.Equals(Me._FullName, value) = false) Then
				Me._FullName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Email", DbType:="NVarChar(4000)")>  _
	Public Property Email() As String
		Get
			Return Me._Email
		End Get
		Set
			If (String.Equals(Me._Email, value) = false) Then
				Me._Email = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NickName", DbType:="NVarChar(4000)")>  _
	Public Property NickName() As String
		Get
			Return Me._NickName
		End Get
		Set
			If (String.Equals(Me._NickName, value) = false) Then
				Me._NickName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SeqNo", DbType:="Int")>  _
	Public Property SeqNo() As System.Nullable(Of Integer)
		Get
			Return Me._SeqNo
		End Get
		Set
			If (Me._SeqNo.Equals(value) = false) Then
				Me._SeqNo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NextSeqNo", DbType:="Int")>  _
	Public Property NextSeqNo() As System.Nullable(Of Integer)
		Get
			Return Me._NextSeqNo
		End Get
		Set
			If (Me._NextSeqNo.Equals(value) = false) Then
				Me._NextSeqNo = value
			End If
		End Set
	End Property
End Class

Partial Public Class sprDecryptCodeResult
	
	Private _UIDCode As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UIDCode", DbType:="NVarChar(MAX)")>  _
	Public Property UIDCode() As String
		Get
			Return Me._UIDCode
		End Get
		Set
			If (String.Equals(Me._UIDCode, value) = false) Then
				Me._UIDCode = value
			End If
		End Set
	End Property
End Class

Partial Public Class sprPREntryResult
	
	Private _Msg As System.Nullable(Of Integer)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Msg", DbType:="Int")>  _
	Public Property Msg() As System.Nullable(Of Integer)
		Get
			Return Me._Msg
		End Get
		Set
			If (Me._Msg.Equals(value) = false) Then
				Me._Msg = value
			End If
		End Set
	End Property
End Class

Partial Public Class sprWorkRequestUPDPlanResult
	
	Private _Msg As System.Nullable(Of Integer)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Msg", DbType:="Int")>  _
	Public Property Msg() As System.Nullable(Of Integer)
		Get
			Return Me._Msg
		End Get
		Set
			If (Me._Msg.Equals(value) = false) Then
				Me._Msg = value
			End If
		End Set
	End Property
End Class

Partial Public Class sprWorkRequestNewResult
	
	Private _Msg As System.Nullable(Of Integer)
	
	Private _RunningNo As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Msg", DbType:="Int")>  _
	Public Property Msg() As System.Nullable(Of Integer)
		Get
			Return Me._Msg
		End Get
		Set
			If (Me._Msg.Equals(value) = false) Then
				Me._Msg = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RunningNo", DbType:="Char(15)")>  _
	Public Property RunningNo() As String
		Get
			Return Me._RunningNo
		End Get
		Set
			If (String.Equals(Me._RunningNo, value) = false) Then
				Me._RunningNo = value
			End If
		End Set
	End Property
End Class

Partial Public Class sprWorkRequestUPDSurveyResult
	
	Private _Msg As System.Nullable(Of Integer)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Msg", DbType:="Int")>  _
	Public Property Msg() As System.Nullable(Of Integer)
		Get
			Return Me._Msg
		End Get
		Set
			If (Me._Msg.Equals(value) = false) Then
				Me._Msg = value
			End If
		End Set
	End Property
End Class

Partial Public Class sprWorkRequestResult
	
	Private _Msg As System.Nullable(Of Integer)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Msg", DbType:="Int")>  _
	Public Property Msg() As System.Nullable(Of Integer)
		Get
			Return Me._Msg
		End Get
		Set
			If (Me._Msg.Equals(value) = false) Then
				Me._Msg = value
			End If
		End Set
	End Property
End Class

Partial Public Class sprChartSummaryResult
	
	Private _MonthYear As String
	
	Private _TotalRequest As System.Nullable(Of Integer)
	
	Private _TotalFinish As System.Nullable(Of Integer)
	
	Private _TotalRemain As System.Nullable(Of Integer)
	
	Private _AccumulateRequest As System.Nullable(Of Integer)
	
	Private _AccumulateFinish As System.Nullable(Of Integer)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MonthYear", DbType:="VarChar(11)")>  _
	Public Property MonthYear() As String
		Get
			Return Me._MonthYear
		End Get
		Set
			If (String.Equals(Me._MonthYear, value) = false) Then
				Me._MonthYear = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TotalRequest", DbType:="Int")>  _
	Public Property TotalRequest() As System.Nullable(Of Integer)
		Get
			Return Me._TotalRequest
		End Get
		Set
			If (Me._TotalRequest.Equals(value) = false) Then
				Me._TotalRequest = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TotalFinish", DbType:="Int")>  _
	Public Property TotalFinish() As System.Nullable(Of Integer)
		Get
			Return Me._TotalFinish
		End Get
		Set
			If (Me._TotalFinish.Equals(value) = false) Then
				Me._TotalFinish = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TotalRemain", DbType:="Int")>  _
	Public Property TotalRemain() As System.Nullable(Of Integer)
		Get
			Return Me._TotalRemain
		End Get
		Set
			If (Me._TotalRemain.Equals(value) = false) Then
				Me._TotalRemain = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AccumulateRequest", DbType:="Int")>  _
	Public Property AccumulateRequest() As System.Nullable(Of Integer)
		Get
			Return Me._AccumulateRequest
		End Get
		Set
			If (Me._AccumulateRequest.Equals(value) = false) Then
				Me._AccumulateRequest = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AccumulateFinish", DbType:="Int")>  _
	Public Property AccumulateFinish() As System.Nullable(Of Integer)
		Get
			Return Me._AccumulateFinish
		End Get
		Set
			If (Me._AccumulateFinish.Equals(value) = false) Then
				Me._AccumulateFinish = value
			End If
		End Set
	End Property
End Class

Partial Public Class sprChartSummaryByDeptResult
	
	Private _Department1 As String
	
	Private _TotalRequest As System.Nullable(Of Integer)
	
	Private _TotalFinish As System.Nullable(Of Integer)
	
	Private _TotalRemain As System.Nullable(Of Integer)
	
	Private _AccumulateRequest As System.Nullable(Of Integer)
	
	Private _AccumulateFinish As System.Nullable(Of Integer)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Department1", DbType:="VarChar(20)")>  _
	Public Property Department1() As String
		Get
			Return Me._Department1
		End Get
		Set
			If (String.Equals(Me._Department1, value) = false) Then
				Me._Department1 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TotalRequest", DbType:="Int")>  _
	Public Property TotalRequest() As System.Nullable(Of Integer)
		Get
			Return Me._TotalRequest
		End Get
		Set
			If (Me._TotalRequest.Equals(value) = false) Then
				Me._TotalRequest = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TotalFinish", DbType:="Int")>  _
	Public Property TotalFinish() As System.Nullable(Of Integer)
		Get
			Return Me._TotalFinish
		End Get
		Set
			If (Me._TotalFinish.Equals(value) = false) Then
				Me._TotalFinish = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TotalRemain", DbType:="Int")>  _
	Public Property TotalRemain() As System.Nullable(Of Integer)
		Get
			Return Me._TotalRemain
		End Get
		Set
			If (Me._TotalRemain.Equals(value) = false) Then
				Me._TotalRemain = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AccumulateRequest", DbType:="Int")>  _
	Public Property AccumulateRequest() As System.Nullable(Of Integer)
		Get
			Return Me._AccumulateRequest
		End Get
		Set
			If (Me._AccumulateRequest.Equals(value) = false) Then
				Me._AccumulateRequest = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AccumulateFinish", DbType:="Int")>  _
	Public Property AccumulateFinish() As System.Nullable(Of Integer)
		Get
			Return Me._AccumulateFinish
		End Get
		Set
			If (Me._AccumulateFinish.Equals(value) = false) Then
				Me._AccumulateFinish = value
			End If
		End Set
	End Property
End Class

Partial Public Class sprChartSummaryByDeptTotalResult
	
	Private _Role As String
	
	Private _TotalRequest As System.Nullable(Of Integer)
	
	Private _TotalFinish As System.Nullable(Of Integer)
	
	Private _TotalRemain As System.Nullable(Of Integer)
	
	Private _AccumulateRequest As System.Nullable(Of Integer)
	
	Private _AccumulateFinish As System.Nullable(Of Integer)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Role", DbType:="VarChar(5)")>  _
	Public Property Role() As String
		Get
			Return Me._Role
		End Get
		Set
			If (String.Equals(Me._Role, value) = false) Then
				Me._Role = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TotalRequest", DbType:="Int")>  _
	Public Property TotalRequest() As System.Nullable(Of Integer)
		Get
			Return Me._TotalRequest
		End Get
		Set
			If (Me._TotalRequest.Equals(value) = false) Then
				Me._TotalRequest = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TotalFinish", DbType:="Int")>  _
	Public Property TotalFinish() As System.Nullable(Of Integer)
		Get
			Return Me._TotalFinish
		End Get
		Set
			If (Me._TotalFinish.Equals(value) = false) Then
				Me._TotalFinish = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TotalRemain", DbType:="Int")>  _
	Public Property TotalRemain() As System.Nullable(Of Integer)
		Get
			Return Me._TotalRemain
		End Get
		Set
			If (Me._TotalRemain.Equals(value) = false) Then
				Me._TotalRemain = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AccumulateRequest", DbType:="Int")>  _
	Public Property AccumulateRequest() As System.Nullable(Of Integer)
		Get
			Return Me._AccumulateRequest
		End Get
		Set
			If (Me._AccumulateRequest.Equals(value) = false) Then
				Me._AccumulateRequest = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AccumulateFinish", DbType:="Int")>  _
	Public Property AccumulateFinish() As System.Nullable(Of Integer)
		Get
			Return Me._AccumulateFinish
		End Get
		Set
			If (Me._AccumulateFinish.Equals(value) = false) Then
				Me._AccumulateFinish = value
			End If
		End Set
	End Property
End Class

Partial Public Class sprChartSummaryByRoleResult
	
	Private _MonthYear As String
	
	Private _TotalRequest As System.Nullable(Of Integer)
	
	Private _TotalFinish As System.Nullable(Of Integer)
	
	Private _TotalRemain As System.Nullable(Of Integer)
	
	Private _AccumulateRequest As System.Nullable(Of Integer)
	
	Private _AccumulateFinish As System.Nullable(Of Integer)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MonthYear", DbType:="VarChar(11)")>  _
	Public Property MonthYear() As String
		Get
			Return Me._MonthYear
		End Get
		Set
			If (String.Equals(Me._MonthYear, value) = false) Then
				Me._MonthYear = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TotalRequest", DbType:="Int")>  _
	Public Property TotalRequest() As System.Nullable(Of Integer)
		Get
			Return Me._TotalRequest
		End Get
		Set
			If (Me._TotalRequest.Equals(value) = false) Then
				Me._TotalRequest = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TotalFinish", DbType:="Int")>  _
	Public Property TotalFinish() As System.Nullable(Of Integer)
		Get
			Return Me._TotalFinish
		End Get
		Set
			If (Me._TotalFinish.Equals(value) = false) Then
				Me._TotalFinish = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TotalRemain", DbType:="Int")>  _
	Public Property TotalRemain() As System.Nullable(Of Integer)
		Get
			Return Me._TotalRemain
		End Get
		Set
			If (Me._TotalRemain.Equals(value) = false) Then
				Me._TotalRemain = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AccumulateRequest", DbType:="Int")>  _
	Public Property AccumulateRequest() As System.Nullable(Of Integer)
		Get
			Return Me._AccumulateRequest
		End Get
		Set
			If (Me._AccumulateRequest.Equals(value) = false) Then
				Me._AccumulateRequest = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AccumulateFinish", DbType:="Int")>  _
	Public Property AccumulateFinish() As System.Nullable(Of Integer)
		Get
			Return Me._AccumulateFinish
		End Get
		Set
			If (Me._AccumulateFinish.Equals(value) = false) Then
				Me._AccumulateFinish = value
			End If
		End Set
	End Property
End Class

Partial Public Class sprChartSummaryByStatusResult
	
	Private _Seq As Integer
	
	Private _ProcessName As String
	
	Private _Total As System.Nullable(Of Integer)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Seq", DbType:="Int NOT NULL")>  _
	Public Property Seq() As Integer
		Get
			Return Me._Seq
		End Get
		Set
			If ((Me._Seq = value)  _
						= false) Then
				Me._Seq = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProcessName", DbType:="VarChar(100) NOT NULL", CanBeNull:=false)>  _
	Public Property ProcessName() As String
		Get
			Return Me._ProcessName
		End Get
		Set
			If (String.Equals(Me._ProcessName, value) = false) Then
				Me._ProcessName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Total", DbType:="Int")>  _
	Public Property Total() As System.Nullable(Of Integer)
		Get
			Return Me._Total
		End Get
		Set
			If (Me._Total.Equals(value) = false) Then
				Me._Total = value
			End If
		End Set
	End Property
End Class

Partial Public Class sprChartSummaryByStatusTotalResult
	
	Private _Seq As Integer
	
	Private _ProcessName As String
	
	Private _Total As System.Nullable(Of Integer)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Seq", DbType:="Int NOT NULL")>  _
	Public Property Seq() As Integer
		Get
			Return Me._Seq
		End Get
		Set
			If ((Me._Seq = value)  _
						= false) Then
				Me._Seq = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProcessName", DbType:="VarChar(100) NOT NULL", CanBeNull:=false)>  _
	Public Property ProcessName() As String
		Get
			Return Me._ProcessName
		End Get
		Set
			If (String.Equals(Me._ProcessName, value) = false) Then
				Me._ProcessName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Total", DbType:="Int")>  _
	Public Property Total() As System.Nullable(Of Integer)
		Get
			Return Me._Total
		End Get
		Set
			If (Me._Total.Equals(value) = false) Then
				Me._Total = value
			End If
		End Set
	End Property
End Class

Partial Public Class sprFileAttachResult
	
	Private _Msg As System.Nullable(Of Integer)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Msg", DbType:="Int")>  _
	Public Property Msg() As System.Nullable(Of Integer)
		Get
			Return Me._Msg
		End Get
		Set
			If (Me._Msg.Equals(value) = false) Then
				Me._Msg = value
			End If
		End Set
	End Property
End Class

Partial Public Class sprChartSummaryByPlaceResult
	
	Private _Seq As Integer
	
	Private _ProcessName As String
	
	Private _Total As System.Nullable(Of Integer)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Seq", DbType:="Int NOT NULL")>  _
	Public Property Seq() As Integer
		Get
			Return Me._Seq
		End Get
		Set
			If ((Me._Seq = value)  _
						= false) Then
				Me._Seq = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProcessName", DbType:="VarChar(100) NOT NULL", CanBeNull:=false)>  _
	Public Property ProcessName() As String
		Get
			Return Me._ProcessName
		End Get
		Set
			If (String.Equals(Me._ProcessName, value) = false) Then
				Me._ProcessName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Total", DbType:="Int")>  _
	Public Property Total() As System.Nullable(Of Integer)
		Get
			Return Me._Total
		End Get
		Set
			If (Me._Total.Equals(value) = false) Then
				Me._Total = value
			End If
		End Set
	End Property
End Class

Partial Public Class sprWorkRequestUPDAndDELResult
	
	Private _Msg As System.Nullable(Of Integer)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Msg", DbType:="Int")>  _
	Public Property Msg() As System.Nullable(Of Integer)
		Get
			Return Me._Msg
		End Get
		Set
			If (Me._Msg.Equals(value) = false) Then
				Me._Msg = value
			End If
		End Set
	End Property
End Class

Partial Public Class sprWorkRequestListsFacResult
	
	Private _WRNo As String
	
	Private _JobName As String
	
	Private _NamePlace As String
	
	Private _NameFloor As String
	
	Private _JobDetail As String
	
	Private _Seq As System.Nullable(Of Integer)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WRNo", DbType:="Char(7)")>  _
	Public Property WRNo() As String
		Get
			Return Me._WRNo
		End Get
		Set
			If (String.Equals(Me._WRNo, value) = false) Then
				Me._WRNo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_JobName", DbType:="NVarChar(100)")>  _
	Public Property JobName() As String
		Get
			Return Me._JobName
		End Get
		Set
			If (String.Equals(Me._JobName, value) = false) Then
				Me._JobName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NamePlace", DbType:="NVarChar(100)")>  _
	Public Property NamePlace() As String
		Get
			Return Me._NamePlace
		End Get
		Set
			If (String.Equals(Me._NamePlace, value) = false) Then
				Me._NamePlace = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NameFloor", DbType:="NVarChar(100)")>  _
	Public Property NameFloor() As String
		Get
			Return Me._NameFloor
		End Get
		Set
			If (String.Equals(Me._NameFloor, value) = false) Then
				Me._NameFloor = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_JobDetail", DbType:="NVarChar(255)")>  _
	Public Property JobDetail() As String
		Get
			Return Me._JobDetail
		End Get
		Set
			If (String.Equals(Me._JobDetail, value) = false) Then
				Me._JobDetail = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Seq", DbType:="Int")>  _
	Public Property Seq() As System.Nullable(Of Integer)
		Get
			Return Me._Seq
		End Get
		Set
			If (Me._Seq.Equals(value) = false) Then
				Me._Seq = value
			End If
		End Set
	End Property
End Class
